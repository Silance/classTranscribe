[{"text":"so what about strings in c?","width":63.18181824684143},{"text":"what if I said","width":99.18181824684143},{"text":"\"hello\"","width":79.18181824684143},{"text":"how is this represented? well clearly it's made up of characters","width":213.18181824684143},{"text":"and I've got five characters to display","width":218.18181824684143},{"text":"h e l l o, but actually C strings contain an extra character at the end","width":325.18181824684143},{"text":"a 0 value or null character to say \"hey this is the end of the string\"","width":350.18181824684143},{"text":"this is going to take six bytes of storage","width":235.18181824684143},{"text":"let's see if we can prove that","width":125.18181824684143},{"text":"we'll say printf() and \"Size of hello is %d\"","width":372.18181824684143},{"text":"and we'll have a little expression here to say what is the sizeof() \"hello\"","width":553.1818182468414},{"text":"and we'll print it out and you see that size of hello is 6","width":566.1818182468414},{"text":"h e l l o that's five, plus an extra byte for the 0 to say that's the end","width":388.18181824684143},{"text":"so we can use sizeof() on constant strings","width":273.18181824684143},{"text":"we could also run through the string to actually find the 0 byte ourselves","width":431.18181824684143},{"text":"so let's do that","width":131.18181824684143},{"text":"let's have a pointer to a character","width":154.18181824684143},{"text":"I will initialize it to my string \"hello\"","width":500.18181824684143},{"text":"which means my pointer is initially pointing to h the first character","width":315.18181824684143},{"text":"I'll have a count variable here","width":201.18181824684143},{"text":"and while the pointer the value is not equal to 0 ","width":769.1818182468414},{"text":"I want to do something","width":99.18181824684143},{"text":"lets increment the pointer","width":81.18181824684143},{"text":"lets move it onto the next character","width":142.18181824684143},{"text":"and let's increment our count as well","width":191.18181824684143},{"text":"so we can find out how many characters we have","width":163.18181824684143},{"text":"and then at the end we will say how many characters we found","width":475.18181824684143},{"text":"not including the 0 byte","width":321.18181824684143},{"text":"so if our program works this should find five characters","width":323.18181824684143},{"text":"lets run it and i'll put in a new line at the end","width":393.18181824684143},{"text":"our little loop went around five times and all it did was increment count","width":609.1818182468414},{"text":"we could have made it of course print out each one of those letters","width":232.18181824684143},{"text":"we could also simplify our program a little bit","width":142.18181824684143},{"text":"because as you know any non-zero value is treated as true","width":342.18181824684143},{"text":"so remove that and say while star pointer","width":245.18181824684143},{"text":"and when we get to the null byte we will finishi","width":197.18181824684143},{"text":"lets change our program so before we increment the pointer to print out the next characters","width":545.1818182468414},{"text":"my format string is just %c. and what character would I want? well the one pointed to by ptr","width":587.1818182468414},{"text":"each character is exactly one byte","width":362.18181824684143},{"text":"so when we add one to our pointer, line ten here","width":266.18181824684143},{"text":"we are just going to add one to it","width":175.18181824684143},{"text":"because each character is exactly one byte","width":165.18181824684143},{"text":"so there's our program and it managed to print out exactly \"hello\"","width":319.18181824684143},{"text":"do we need to write this every time that we want to find out the number of characters in a string?","width":608.1818182468414},{"text":"no! there's a function called strlen()","width":235.18181824684143},{"text":"instead of my loop if I include string dot h","width":413.18181824684143},{"text":"I've now got strlen()","width":122.18181824684143},{"text":"let me check the two results","width":137.18181824684143},{"text":"instead I'll say len = strlen() and pass it a pointer to my character","width":394.18181824684143},{"text":"I'm tempted to use pointer but that would be a bad idea","width":208.18181824684143},{"text":"perhaps you can figure out why","width":116.18181824684143},{"text":"so \"Strlen returned\" and we'll talk about how to fix my program in a moment","width":397.18181824684143},{"text":"so we'll run this","width":389.18181824684143},{"text":"strlen() returned 0","width":417.18181824684143},{"text":"why? because by the time my loop finished I'd advanced that pointer to the null byte","width":395.18181824684143},{"text":"so when we passed it to strlen() it immediateily found the null byte","width":243.18181824684143},{"text":"what we should do is evaluate our strlen() before we change our pointer","width":313.18181824684143},{"text":"the last thing we'll do today is make our program crash","width":825.1818182468414},{"text":"try and change our first character to be someting else","width":364.18181824684143},{"text":"like 'J' turn it into Jello","width":283.18181824684143},{"text":"dereference that pointer and use it to push in a character","width":397.18181824684143},{"text":"I don't want to have a string, i actually want to have a character","width":322.18181824684143},{"text":"let's try that and see what happens","width":182.18181824684143},{"text":"I get a seg fault when I try to run that line","width":328.18181824684143},{"text":"different parts of proccesses memory are valid for reading or reading/writing","width":549.1818182468414},{"text":"the program code, the actual assembly code, can only be read","width":418.18181824684143},{"text":"and my constants, such as \"hello\" can only be read","width":274.18181824684143},{"text":"and the hardware is sophisticated enough to know which parts of memory are read and which parts are read/write","width":486.18181824684143},{"text":"and which parts of memory are invalid","width":147.18181824684143},{"text":"that's why I get a seg fault if I try to change the constant memory","width":383.18181824684143},{"text":"time for you to play with character poitners, bye","width":305.18181824684143}]