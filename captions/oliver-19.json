[{"text":"Hello welcome","width":75.18181824684143},{"text":"so this video is a little introduction to signals","width":190.18181824684143},{"text":"so signals are like a software interrupt","width":167.18181824684143},{"text":"we can use them to control our processes and even do things asynchronously","width":353.18181824684143},{"text":"so let's have a look at a little program i have written so far that doesn't use signals yet","width":288.18181824684143},{"text":"all it does is ask for the environment of home","width":280.18181824684143},{"text":"in other words the user's home directory","width":117.18181824684143},{"text":"and then we have a little loop that prints it out and sleeps for three seconds","width":314.18181824684143},{"text":"so every three seconds it is going to print out my home directory","width":211.18181824684143},{"text":"and on this machine i am root so it just keeps on printing out slash root","width":343.18181824684143},{"text":"so of course we can stop this program by pressing control c","width":383.18181824684143},{"text":"and when you do that you actually are sending a signal","width":229.18181824684143},{"text":"sigint or sig interrupt to the process","width":291.18181824684143},{"text":"now maybe it might be that our process might not like being interrupted","width":198.18181824684143},{"text":"why don't we catch that signal and install our own little handle for that","width":318.18181824684143},{"text":"so here is how we will do this","width":113.18181824684143},{"text":"i am going to say at the beginning of my program that if you get a certain signal say sigint ","width":829.1818182468414},{"text":"rather than having the default behavior which as we know is to stop the program or quit the program","width":370.18181824684143},{"text":"let us run my code instead","width":160.18181824684143},{"text":"so i will call it say nothankyou","width":209.18181824684143},{"text":"so what is no thank you","width":123.18181824684143},{"text":"it has to be a pointer to a function","width":143.18181824684143},{"text":"how do we do that","width":136.18181824684143},{"text":"easy just write a function","width":116.18181824684143},{"text":"and in this case the correct type is something that doesn't return anything","width":257.18181824684143},{"text":"but does take an integer","width":158.18181824684143},{"text":"in fact it is the signal that is being sent to our program","width":229.18181824684143},{"text":"and so that we know that this is being called let's write something out directly to standard output","width":403.18181824684143},{"text":"so i can say write and i can say no","width":186.18181824684143},{"text":"so what is that that is a little message of three bytes to send","width":221.18181824684143},{"text":"so let's run this now","width":119.18181824684143},{"text":"okay so here is my program every three seconds it is going to print root","width":278.18181824684143},{"text":"but now i am going to press control c","width":146.18181824684143},{"text":"and it prints no no so it's refusing to quit","width":583.1818182468414},{"text":"you might also notice that the sleep also immediately returns","width":279.18181824684143},{"text":"more about that later","width":84.18181824684143},{"text":"it is still possible to stop our program here","width":215.18181824684143},{"text":"if we do control backslash then we force it to quit","width":324.18181824684143},{"text":"so sigint is one common signal that we send out programs","width":323.18181824684143},{"text":"there are many others","width":78.18181824684143},{"text":"just for fun let me show you one called sigalarm","width":201.18181824684143},{"text":"so this time i am going to say alarm seven seconds","width":523.1818182468414},{"text":"and so when you call alarm you are going to say give me a special signal called sigalrm in this many seconds","width":626.1818182468414},{"text":"in seven seconds","width":99.18181824684143},{"text":"and we better install then","width":143.18181824684143},{"text":"well let's just run it and see what happens to begin with","width":223.18181824684143},{"text":"so the default behavior of this sigalrm is to actually stop our program","width":846.1818182468414},{"text":"it quits the program","width":103.18181824684143},{"text":"that's a pretty aggressive alarm clock i think you'll agree","width":175.18181824684143},{"text":"and it also as you see prints out alarm clock on the shell","width":233.18181824684143},{"text":"perhaps we don't want our alarm signal to be so menacing","width":308.18181824684143},{"text":"so this time instead of sigint i can say look for a certain signal called sigalrm","width":407.18181824684143},{"text":"please call my function instead","width":207.18181824684143},{"text":"okay so here we go our alarm went off after four seconds and this time we asynchronously ran our code that printed out no to standard out","width":1027.1818182468414},{"text":"so this is pretty exciting right","width":126.18181824684143},{"text":"you probably thought about interrupts on the hardware level","width":249.18181824684143},{"text":"now we can do interrupts at the software level and we can respond to things which happen in our environment very quickly","width":370.18181824684143},{"text":"so we will find signals to be very useful when we start dealing working with more than one process","width":419.18181824684143},{"text":"we can control our programs and we can also work with very large amounts of data coming in","width":386.18181824684143},{"text":"that is enough for me","width":139.18181824684143},{"text":"bye","width":63.18181824684143}]