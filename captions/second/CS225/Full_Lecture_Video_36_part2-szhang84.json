[{"text":"Very good!","width":384},{"text":"So, in the table, so remember that roots are indicated by negative numbers.","width":452},{"text":"And in the table 6 is supposed be a root, not 3.","width":495},{"text":"In the table it says 6 is 3's parent.","width":326},{"text":"So, that is my intentional bug.","width":160},{"text":"Anybody else find something different some other error?","width":488},{"text":"So notice that these are not ordered trees in any sense.","width":287},{"text":"So it didn't matter where I draw the 2 and 9 here relative to one and another.","width":455},{"text":"There is no notion of a left child and a right child or a middle child.","width":553},{"text":"So this tree is ordered, it is not necessarily binary though.","width":407},{"text":"This example happens to not to have any non binary nodes.","width":463},{"text":"It is direct, that is the key part.","width":313},{"text":"Let's take the union just to remind ourselves how to take union both in the context in the model and in the context of its representation in memory.","width":942},{"text":"So I want to take union between these two sets and do something that makes all of this in the same tree.","width":714},{"text":"So I got these 2 trees what should I do?","width":269},{"text":"Yeah, make one of the root point to the other.","width":526},{"text":"Now, should I do this or should I do this?","width":263},{"text":"OK you think 5 should point to 7.","width":510},{"text":"Now what I want you get from that little exchange is that there was a choice to be made.","width":1164},{"text":"And for now I am gonna make a arbitrary choice.","width":223},{"text":"I am just gonna have the one on the left point to the one the right okay?","width":433},{"text":"but you should recognize that was arbitrary.","width":437},{"text":"OK finely, if I say something like the union of two with 7, what i really mean is the union of the set containing 2 with the set containing 7.","width":1646},{"text":"So I need to call find in order to get the appropriate representative of that set.","width":702},{"text":"Ok any questions?","width":70},{"text":"All right so, and the reason that I bring it up here is because when I talk about these function and when we discuss running time of these fictions, we want to find to be decoupled from union.","width":1175},{"text":"When you implement these things in mp7, you are gonna throw a find inside because you do not want to have to demand the client do this every time.","width":702},{"text":"So, there will be a slightly different specification for the union function in the mp than there is here.","width":627},{"text":"But I want to decouple them, because I want to be able to talk about running times separately.","width":331},{"text":"All right any question.","width":344},{"text":"So let's write some codes.","width":442},{"text":"Function find is going to take a key or a element identifier and it is going to return the root of the up tree, as a representative.","width":2163},{"text":"Now, look at this code, it is really cool!","width":366},{"text":"If the value in the array at i is less than 0, it means i is a root, that is what we agreed on.","width":553},{"text":"In which case, we are gonna return i, otherwise, we are going to walk one step of the tree.","width":598},{"text":"Ok, so we are gonna find on i's parent.","width":683}]