[{"text":"Okay.","width":140},{"text":"So, how long does it take to insert into an unsorted list?","width":347},{"text":"unsorted list I just want to be putting values in.","width":214},{"text":"How much time should that take?","width":184},{"text":"Oh constant time.","width":86},{"text":"Look at that.","width":45},{"text":"There is mistake already.","width":114},{"text":"This should be constant time.","width":127},{"text":"Good.","width":28},{"text":"How about removemin?","width":136},{"text":"is Order(n) correct?","width":246},{"text":"I want to find in an unsorted array the minimum value?","width":221},{"text":"Yeah?","width":41},{"text":"That is fine, right?","width":161},{"text":"Okay.","width":24},{"text":"So, order(n) is correct.","width":97},{"text":"I would have to go on a hunt through the linear collection of data looking for the minimum.","width":420},{"text":"Okay.","width":56},{"text":"fine.","width":36},{"text":"How about for a linked link?","width":233},{"text":"if we implemented this functionality, insert and removemin using a singlylinked list?","width":506},{"text":"how much would it take to insert?","width":285},{"text":"constant?","width":87},{"text":"I would put the new one back here right?","width":277},{"text":"No, no reason to do so.","width":108},{"text":"It is all unsorted.","width":91},{"text":"So, when you insert, you would insert at the front.","width":211},{"text":"you could do that at constant time.","width":146},{"text":"Or, you have a tail pointer, you could do it at the rear.","width":192},{"text":"Okay.","width":21},{"text":"Fine.","width":26},{"text":"How about removemin?","width":234},{"text":"Still O(n).","width":82},{"text":"we would have to go searching for it.","width":160},{"text":"Let's suppose.","width":136},{"text":"we decided we can fix this.","width":191},{"text":"we will fix it by using a sorted array.","width":481},{"text":"In that case, how long does it take to do an insertion into a sorted array.","width":477},{"text":"two three five eight thirteen twenty-one.","width":357},{"text":"And, I want to insert eleven.","width":141},{"text":"How much time does that take?","width":218},{"text":"Log(n), right??","width":92},{"text":"Log(n) to.","width":37},{"text":"how come is it log(n).","width":337},{"text":"Why are we thinking log(n)?","width":239},{"text":"Binary search.","width":47},{"text":"Very good.","width":49},{"text":"You observed the opportunity for binary search.","width":190},{"text":"we used binary search to determine that eleven goes here but we have to shift the data.","width":575},{"text":"So this is not true.","width":120},{"text":"Oh, Gosh.","width":17},{"text":"I swore when I came to school.","width":619},{"text":"Today would be a better lecture course than Monday's.","width":252},{"text":"Of course, that is a low-bar.","width":146},{"text":"All right, How about for a linked list?","width":285},{"text":"sorted linked list?","width":376},{"text":"Can you do binary search?","width":120},{"text":"No.","width":94},{"text":"Can't do binary search.","width":76},{"text":"In this case, it is big O(n) to find.","width":227},{"text":"Okay, So this is the moment.","width":269},{"text":"This is for find.","width":85},{"text":"This is for shift.","width":120},{"text":"How about removemin?","width":199},{"text":"how about removemin?","width":350},{"text":"Are those correct?","width":64},{"text":"They are constant both cases?","width":88},{"text":"Is this correct?","width":660},{"text":"Could it be correct, If I have put those differently?","width":171},{"text":"Okay.","width":27},{"text":"So, I should have done, twenty one, thirteen.","width":310},{"text":"eight, five, three, and then it would be constant time.","width":264},{"text":"It would always remove from the end of chunk of data.","width":283},{"text":"Okay.","width":30},{"text":"And, how about for a singlylinked list?","width":267},{"text":"Is it constant time to remove minimum?","width":200},{"text":"Yes, if you keep the minimum where?","width":245},{"text":"At the head of the list, what if you keep the minimum at the tail and you have the tail pointer?","width":441},{"text":"So, I am going to keep the minimum here and have a tail pointer.","width":334},{"text":"What do you think?","width":107},{"text":"Removing that guy?","width":176},{"text":"No, because I can't get to it in constant time.","width":258},{"text":"Resetting that tail pointer requires a traversal of structure.","width":350},{"text":"Everybody, good??","width":153},{"text":"Okay, so take a look at this messy table.","width":309},{"text":"And, it looks like there is some trade-off going on, right?","width":267},{"text":"so we got constant time for one of the functions and linear time for the other functions.","width":508},{"text":"What would be better than this?","width":230},{"text":"What would be better?","width":209},{"text":"log(n).","width":64},{"text":"log(n) would be better especially if we were able to replace the linear time function, log(n).","width":414},{"text":"Well, I am not going to tell you how good it will get.","width":414},{"text":"Instead, I am going to switch gears so that is a reasonable goal.","width":267},{"text":"The question is whether or not we can do log(n) and constant time here.","width":375},{"text":"Just how good can we do?","width":127},{"text":"Using a different structure.","width":253},{"text":"Now, I want to leave this one hanging because I want to show you something completely new.","width":538},{"text":"This will be more fun for you if you focus here instead of on you paper.","width":347},{"text":"No.","width":2},{"text":"Don't look.","width":71},{"text":"Don't look.","width":27},{"text":"I know you want to look, right?","width":159},{"text":"but don't.","width":63},{"text":"All right.","width":133},{"text":"So here is a new structure.","width":257},{"text":"What I want you to do is tell me everything you can about it.","width":348},{"text":"Tell me everything you can about it.","width":181},{"text":"Everything you think might be interesting.","width":133},{"text":"Everything you think characterizes it "width":391}]