[{"text":"If two keys map to same small index, and by map to I mean via the hash function.","width":1103},{"text":"Ok, any question about all of that?","width":314},{"text":"Alright.","width":91},{"text":"So the first part of our focus is gonna center on the hash function itself, the second part will talk about collision resolution strategies on Friday.","width":971},{"text":"Alright, any questions about all theres?","width":309},{"text":"Alright, so hash functions, this is the story on hash functions as I know it.","width":414},{"text":"It's going to necessarily be an incomplete story because guess what?","width":308},{"text":"There are people working on all kinds of different large entities spending their entire lives working on good hash functions.","width":718},{"text":"So in this hour, we are not going to touch on all of the complexities involved with creating good hash functions.","width":559},{"text":"So it's people who are interested in topographys are doing hash functions, mathematicians, people who deal with big data want really good hash functions with great characteristics.","width":813},{"text":"So this is just a glimpse to their world, there's a whole career there waiting for you centered on this material if you would like.","width":535},{"text":"I 'm intrigued by especially big data aspects of it.","width":305},{"text":"Alright, let's see.","width":54},{"text":"What is a hash function look like?","width":215},{"text":"Typically, consists of two parts: a hash which takes the key and finds some integer return some integer together with something that shrinks that integer down into a space small enough that we can store it.","width":1193},{"text":"So a compression which is a function mapping that larger integer into the array, so zero to n-1, and this is almost always and it it will always be for our class just the mod function.","width":1049},{"text":"This is mod N where N is the table size.","width":669},{"text":"Any question about that?","width":278},{"text":"OK, so turns out that choosing hash function is tricky, it's hard to choose good ones.","width":606},{"text":"and I will talk a little bit about it on the next slide.","width":257},{"text":"There's again a whole lecture of what our some classic bad hash functions that have been created over time and as the next greatest things for hash functions and then found to contain periodicity that actually results in very bad behavior, we will talk a little bit about that in a minute.","width":1354},{"text":"So we don't want you to create your own.","width":161},{"text":"The \"yet" is not really well stated.","width":202},{"text":"It should really be \"unless".","width":269},{"text":"Where the unless is that you understand your key pace and it is small enough that you can create a bijection.","width":532},{"text":"unless you can create a bijection in which case you should make your own hash function.","width":604},{"text":"unless you know your data, well enough, to create a bijection.","width":918},{"text":"and notice that really means also that your data has to be small enough that you could create this bijection.","width":416},{"text":"Alright, so what characterizes a good hash function?","width":429},{"text":"So these are the characteristics of a good hash function.","width":521},{"text":"Computing how much time we are gonna give the function to run on the key?","width":417},{"text":"Constant time, that's right, very good.","width":147},{"text":"It must be computed in constant time.","width":267},{"text":"It must be deterministic.","width":156},{"text":"What's the opposite of deterministic?","width":287},{"text":"\"Probablistic", or another word for that is random, tight?","width":467},{"text":"So the opposite of deterministic in this case is random.","width":253},{"text":"Now think about what this means.","width":144},{"text":"What this means here is if i==j, then it must be the case h(i)==h(j).","width":1204},{"text":"there is no dice roll that says what the hash of the index should be.","width":723},{"text":"We plug in 4, we are gonna get the same value out every time.","width":319},{"text":"We'll talk about what would happen if that was broken in just a minute.","width":686},{"text":"good hash functions also satisfy the SUHA.","width":320},{"text":"I like saying it, and so I will say it again and I will tell you what it means SUHA.","width":306},{"text":"simple uniform hashing assumption.","width":893}]