[{"text":"Good, if you had 6, then these would all still live in the same node.","width":553},{"text":"Alright, let's see...","width":472},{"text":"Let's see what's I'm gonna ask...","width":746},{"text":"Oh, why not 7?","width":193},{"text":"This leaf implies not 4; this structure implies not 6.","width":539},{"text":"Why not 7?","width":86},{"text":"Same reason but also, these are 2 small.","width":301},{"text":"Any node with only 2 keys that's less than you can have for 7.","width":435},{"text":"7 will have to have the ceiling of 7/2 4 children.","width":377},{"text":"So we need to have at least 4 children or 3 keys.","width":306},{"text":"So this is too small to be 7.","width":323},{"text":"I didn't look at the test, so I don't know if the instinct about this is good enough.","width":1008},{"text":"Oh, how much detail we need to know about that definition.","width":341},{"text":"I think knowing that definition is reasonable.","width":273},{"text":"OK, here's B-tree search.","width":336},{"text":"Here's some code, represents B-tree search.","width":316},{"text":"I think it's kind of pseudo-code.","width":195},{"text":"It assumes some functions we have been articulated.","width":345},{"text":"In particular, it assumes a discrete function.","width":380},{"text":"So that we have access to some functions that when given a particular child we can find it.","width":650},{"text":"Now we are looking inside of B-tree node which you can sort of think of as an array.","width":508},{"text":"For a particular key, inside the array, x were looking for a key.","width":450},{"text":"Now, take a look at this code.","width":178},{"text":"And suggest any sufficiency, you'll find something that bugs you about this code.","width":1444},{"text":"...Pseudocode, I should say.","width":129},{"text":"What's it doing there?","width":803},{"text":"What's that while loop's goal?","width":514},{"text":"I'm asking all of you, I'm in conversation with [who?\] but I'm asking all of you, what's that while loop's goal?","width":685},{"text":"[student answering] What's the efficient fashion.","width":944},{"text":"Look, we've made a big point, good job.","width":714},{"text":"So we have made a big deal about the fact that the keys in these nodes are ordered, right?","width":363},{"text":"You should never search through an ordered structure, especially an ordered array linearly.","width":475},{"text":"You should just use binary search, that's what you get for this.","width":376},{"text":"Here's the thing now.","width":84},{"text":"I don't care, and here's why.","width":294},{"text":"These are all..","width":148},{"text":"each one of those is a super fast operation.","width":289},{"text":"They're super fast.","width":229},{"text":"These all happens in the CPU.","width":193},{"text":"The data is all sitting right there.","width":614},{"text":"It's this discrete that determines the running time of the algorithm.","width":654},{"text":"Very long running time.","width":849}]