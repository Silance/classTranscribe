[{"text":"Even if-- even if, uhh, the thing I'm looking for is not in the table...","width":551},{"text":"This one is for successful, this one is for unsuccessful.","width":255},{"text":"Okay.","width":39},{"text":"Up there, that same value, we would have to keep our finesse-- same number of probes, we'd have to keep our table only half full.","width":697},{"text":"Okay, our table only half full, for example.","width":257},{"text":"Any question about that?","width":160},{"text":"I'm used to having this discussion in the context of that applet-- I don't pretend that this is particularly smooth.","width":541},{"text":"Alright.","width":76},{"text":"Any questions?","width":43},{"text":"Is it good?","width":45},{"text":"So the idea is that these probe based strategies work fine if you don't let your table get too full.","width":562},{"text":"Yeah?","width":12},{"text":"Nathan?","width":8},{"text":"[question being asked].","width":267},{"text":"No, that was just-- four doesn't seem like too many; four is a constant number, and it seems like it'd be pretty quick, right?","width":446},{"text":"And I can say to somebody, \"oh, we'll never have to go further than four.\" Okay?","width":360},{"text":"It was an arbitrary choice.","width":147},{"text":"But it turns out-- well, I'll save that punchline for a minute.","width":247},{"text":"Alright, any questions about this?","width":117},{"text":"Yes?","width":271},{"text":"[question being asked].","width":79},{"text":"So, successful is if it's in the table, unsuccessful is if it's not in the table.","width":292},{"text":"So if you're looking for a key that is actually there somewhere, versus if you're looking for a key that is not there.","width":449},{"text":"That's the only difference, okay?","width":174},{"text":"I question...","width":53},{"text":"Maybe I shouldn't even break them out.","width":93},{"text":"Maybe we should just look at the unsuccessful numbers.","width":199},{"text":"Alright, any other questions about this?","width":155},{"text":"Any other questions about this?","width":79},{"text":"The takeaway is, if your table gets full, look how fast those functions go up.","width":428},{"text":"But if your table isn't very full, you're kinda in good shape for these things.","width":283},{"text":"Alright, so, uhhh...","width":177},{"text":"Let's be a little-- let's think about this a little bit.","width":267},{"text":"Alright.","width":58},{"text":"So, when we were talking about queues, and if I asked you, you know, I've got this queue, what do I do if it fills-- what do you say?","width":714},{"text":"What's your answer?","width":138},{"text":"What if the array fills?","width":179},{"text":"I should double the array...","width":400},{"text":"and....?","width":101},{"text":"Copy the data.","width":48},{"text":"Very good.","width":22},{"text":"Okay, that's what we used to have.","width":370},{"text":"Here's what we have now.","width":77},{"text":"I'm gonna change it up a little bit.","width":167},{"text":"So, look, we're not going to let the array fill.","width":402},{"text":"We're only going to let the array get up to some alpha that we control-- some load factor that we control.","width":744},{"text":"In practice, the reasonable load factor that is used is approximately 2/3.","width":436},{"text":"There's an analytical reason for using this load factor, but in practice, it's about 2/3.","width":478},{"text":"So, 'what if the array becomes more than 2/3 full' replaces the question of what happens if the array fills.","width":604},{"text":"What if the array is more than 2/3 full?","width":707},{"text":"(Alpha greater than 2/3).","width":292},{"text":"Now, we don't exactly double the array and copy the data.","width":329},{"text":"We...","width":129},{"text":"find the first prime greater-than twice the array size.","width":478},{"text":"Find first prime greater than twice array size.","width":763},{"text":"Because we like prime numbers but we're not gonna-- I'll explain that if you want.","width":377},{"text":"And then, instead of copying the data, we do something a little bit different...","width":353},{"text":"Okay?","width":43},{"text":"So, I wanna do this example so that you see what we need to do.","width":335},{"text":"So, suppose we have hashed our values into this table, and this hash function h(k) is a hash of some kind, mod table size, which is five.","width":1052},{"text":"And we've hashed these three values into it.","width":225},{"text":"And another piece of data comes along.","width":246},{"text":"Now, we're going to find the first prime bigger-than twice the array size-- oh look, there it is, and copy the data in, okay?","width":575},{"text":"So it's just a straight copy.","width":119},{"text":"What's the problem with that?","width":338},{"text":"What does our new hash function look like?","width":421},{"text":"What does the new hash function look like?","width":255},{"text":"It's h 1 of k, mod 11 now.","width":649},{"text":"Which means that you will never get these guys back-- we changed the hash function.","width":333},{"text":"So instead of copying the data, so instead of copying the data, we rehash the data with our new hash function.","width":961}]