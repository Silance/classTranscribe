[{"text":"you guys are thinking way too hard.","width":184},{"text":"the heap past to function has insert and removed min.","width":472},{"text":"Remove min...","width":102},{"text":"etc..","width":85},{"text":"until you are down.","width":230},{"text":"Remove the minimum, remove the next minimum, remove the next minimum.","width":262},{"text":"So, this is the sorting algorithm.","width":118},{"text":"I'm gonna talk about the benefit in just a minute.","width":329},{"text":"So the first thing you wanna do is with your data that came in unsorted.","width":407},{"text":"So this is given and unsorted array.","width":541},{"text":"First thing you wanna do is build the heap.","width":363},{"text":"Okay.","width":40},{"text":"Now.","width":20},{"text":"If I remove the minimum, if I remove A what am I gonna do with it where am I gonna put it?","width":564},{"text":"In front of some other array.","width":84},{"text":"Build it up.","width":98},{"text":"Now it will be fine.","width":82},{"text":"I don't wanna use the space so where is the room for A?","width":392},{"text":"If I remove A, if I pull A off, first thing I'm gonna do is get rid of w so I can use it to plug in for whole, So guess what.","width":754},{"text":"I have room for A so I'm gonna put it here.","width":340},{"text":"So do that again, remove it.","width":184},{"text":"Then B's gonna be here eventually then remove the minimum.","width":252},{"text":"We have room and B's gonna be here.","width":183},{"text":"This is a do a repeated remove min, keeping values in the structure.","width":1331},{"text":"And then the last thing is you wanna reverse the order of your array if you want it to be an increasing order.","width":487},{"text":"What's the running time of each of the step?","width":183},{"text":"Running time of step 1 is big o of n.","width":1025},{"text":"We just showed it.","width":112},{"text":"We almost showed it.","width":228},{"text":"Repeated remove min.","width":209},{"text":"Darn it.","width":70},{"text":"This is not better than n log n.","width":255},{"text":"And then to reverse the array is big o of n.","width":507},{"text":"The whole running time is big o nlogn.","width":282},{"text":"We don't need another one because this one is in place sort with worst case nlogn, whereas quicksort dosen't give you worst case nlogn.","width":1183},{"text":"I have one last thing before you go because it's fun.","width":994},{"text":"Why did I choose this picture for our closing thought?","width":806},{"text":"it's a fun a picture but why is it for today?","width":744},{"text":"When you are together with your friend and you decided to make a human pyramid.","width":2320},{"text":"Who goes on top?","width":751},{"text":"The lightest person.","width":169},{"text":"So this is like a physical representation of heap.","width":442},{"text":"We will talk about it next time.","width":992}]