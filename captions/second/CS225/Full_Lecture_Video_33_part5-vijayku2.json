[{"text":"But we're not going to end up relying very much on this definition.","width":734},{"text":"Here's a question: are complete trees full?","width":607},{"text":"Is every complete tree full?","width":382},{"text":"No.","width":53},{"text":"Is every complete tree a perfect tree?","width":408},{"text":"No.","width":29},{"text":"Is every perfect tree a complete tree?","width":161},{"text":"Yes.","width":30},{"text":"Ok, so lets talk about implementation of this thing.","width":470},{"text":"What I'm going to ask you to do is imagine how you would implement this thing and then tell me what the primary private member would look like.","width":3333},{"text":"So think about how you would implement it and tell me what the primary private member of that implementation is.","width":1618},{"text":"Tell me what you think.","width":586},{"text":"What do you think?","width":200},{"text":"It's a tree!","width":88},{"text":"How are you going to characterize this tree in code?","width":990},{"text":"Have you done things like this in the past?","width":988},{"text":"We can implement this using a TreeNode.","width":312},{"text":"A TreeNode pointer calls say the root.","width":393},{"text":"Perfectly reasonable implementation except that we don't have to do it that way.","width":533},{"text":"Instead, we can use an array.","width":262},{"text":"We know the complete structure about the tree.","width":794},{"text":"Now, in MP6 that is true as well.","width":342},{"text":"We're going to use a vector to implement the tree but it's slightly different.","width":497},{"text":"Where is the root in this implementation?","width":495},{"text":"Early on in the array, at the front of the array.","width":388},{"text":"In MP6 the root's in the middle.","width":453},{"text":"Ok, now in a pointer based implementation of a tree, it's important to have the following pieces of information: 1.","width":1572},{"text":"You need instant access to a left child "width":570}]