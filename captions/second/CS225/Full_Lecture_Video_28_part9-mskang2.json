[{"text":"And you go out, and you get the part containing 51, and you bring it back.","width":497},{"text":"So, there is this big trip that happens from your conceptual notion of the AVL tree to the disk, and this is very slow.","width":915},{"text":"And you bring the data back, and the comparison is quick, and we say \"okay, we need this.\" And again, you know you go out, and you get this [vocalizing, ohh].","width":697},{"text":"Ok, and then you say you need this, and you go out and you get it from another spot on your disk.","width":409},{"text":"And finally you go out and you get it and you go, \"Oh yay, 66, that took a long time.\" Ok, so this is bad.","width":598},{"text":"So shallow trees are basically imperative.","width":476},{"text":"Because, they minimize the number of trips that you have to take to the disk.","width":524},{"text":"Here's the other thing, here's the secret, here's the secret I didn't tell you: Back when I was over here, getting the key off the disk, over here, way over here, I didn't just pick up one key, what's transferred back is actually a block of data.","width":1324},{"text":"A whole block of data, ok that's the bandwidth of the interaction with your disk.","width":561},{"text":"Now, it would be great if a lot of searching could happen in all of that.","width":506},{"text":"So, we want a structure that has a shallow tree, and takes advantage of relevant data in the nodes, in a block.","width":1041},{"text":"So, my picture of what's really happening is you get a bunch of data from your disk, even if you're only interested in part of it.","width":780},{"text":"Ok, any question about that?","width":149},{"text":"Alright, I have something fun to show you.","width":184},{"text":"This is a b tree, this is what we call a b tree, so I read about it a little bit, I don't know what b tree stands for, but the speculation is that it stands for block, ok, because this is a one node, b tree.","width":1096},{"text":"Ok?","width":78},{"text":"Now, in fact, it's the root of one.","width":218},{"text":"Um, it corresponds to an entire block of data brought back.","width":403},{"text":"Usually they have uh um a thousand keys in them.","width":396},{"text":"We have only eight keys.","width":185},{"text":"Um, and we'll describe what m is in just a minute.","width":213},{"text":"So, what do you notice about those pieces of data?","width":324},{"text":"They're in order, that's right!","width":92},{"text":"So, and it's a node of a b tree, so a node of a b tree is a essentially a vector or an array of ordered keys, ok?","width":735},{"text":"Um, and these are the principles: Build a tree that uses one disk block per node, uh the nodes will have more than one key, and they key will be or the tree will be balanced and shallow.","width":782},{"text":"We'll start next time looking at an illustration of these, because they're really quite cool.","width":909}]