 [{"text":"Welcome so let's start creating some files","width":249},{"text":"for that we can use the system call open()","width":251},{"text":"and for open we need to say whether we want to append to an existing file, create a brand new file, and we need to give it a filename","width":631},{"text":"For example, I might have a file name called \"output.txt\"","width":396},{"text":"so the open call takes 2 or 3 arguments. the second argument will be exactly what we want to do","width":605},{"text":"so in this case we want to say create a brand new file and truncate it back to 0 if it doesn't exist","width":469},{"text":"so, I want to truncate as well","width":185},{"text":"if we are creating a new file we better say who can read this file and who can write to this file and who can execute this file","width":533},{"text":"so we are going to have to say something about the mode flags ","width":297},{"text":"who is allowed to do what","width":186},{"text":"inally this call is going to give us back an integer, a file descriptor","width":301},{"text":"just like we've seen so far with file number 1 and file number 2","width":154},{"text":"so lets store that inside a litler variable","width":262},{"text":"ok, so now I better actually find out what the correct syntax is","width":374},{"text":"and the correct arguments are in order to create a file","width":258},{"text":"so lets go and look that up","width":153},{"text":"and that we'll find inside the manual","width":143},{"text":"And, if, for example, I type \"man open\" on a command line on a real linux machine. it doesn't quite work yet in my small virtual one. we didn't have enough memory to include all the manual pages yet","width":990},{"text":"but heres a linux manual page I found on the web for the open()","width":312},{"text":"and you'll see here's the function signature","width":253},{"text":"where we're going to pass in an integer for the flags and the mode type","width":256},{"text":"so, I'm going to look up now the flags I need to open and create a new file","width":581},{"text":"I don't want to do append()","width":154},{"text":"I want to use \"create\" and I want to truncate it as well","width":256},{"text":"let's include \"O_CREAT\" here. I'm going to say \"O_CREAT\" which is a constant and I'm going to bitwise OR it with the flag to say \"truncate\" so let's look that up as well","width":993},{"text":"","width":526},{"text":"alright and i want to say when i open it that i am going to open it for say reading and writing","width":514},{"text":"so let us grab that as well","width":120},{"text":"so that is the first thing","width":160},{"text":"now we need to do the mode","width":109},{"text":"Let's write this as a variable.","width":236},{"text":"and there is actually a typedef","width":192},{"text":"it is essentially an integer but it is wrapped up in this type here called mode","width":435},{"text":"mode_t","width":102},{"text":"we'll say that with our file we want to be fairly private and only the owner of the file can access it","width":563},{"text":"Let's go back up and find those flags, where are you? Here we go.","width":308},{"text":"We'll say that the user has read and write permission","width":340},{"text":"We'll copy the read one and we'll have write permission as well.","width":955},{"text":"But no one else in our linux machine will be allowed to read it nor write it.","width":372},{"text":"So that's the permissions we want","width":199},{"text":"What can we do with this?","width":224},{"text":"Let's write something out to this file.","width":371},{"text":"We will write a little message \"Great!\" and a newline","width":506},{"text":"so how many characters is that? I've got \"one, two, three, four, five, six, and a new line so that's seven characters\"","width":650},{"text":"then we'll close this file descriptor meaning we don't want to use this file descriptor anymore","width":402},{"text":"that will ensure as well that all of the bytes that we send to the file stream have been saved","width":687},{"text":"We're not doing any error checking right now, we're just trying to write the smallest possible program to create a file and send something to it","width":563},{"text":"let's run this and see what we get","width":264},{"text":"we'll run into an error which is: we haven't defined what this mode_t is","width":307},{"text":"what we forgot to do, was to do the includes","width":307},{"text":"the good news is that the man pages tell us which includes we need to put at the top of our program","width":533},{"text":"let's grab those and insert them in here","width":285},{"text":"i will just get the formatting correct","width":279},{"text":"and, run it again","width":187},{"text":"Our program ran and it's still printing \"Hello\" to standard out and dot to standard error","width":617},{"text":"but hopefully, it also secretly created another file","width":256},{"text":"let's have a look at that file","width":51},{"text":"I can do \"ls\" and see if anything exists starting with \"out\"","width":493},{"text":"we've got output.txt. great!","width":233},{"text":"let's look at the contents of that file","width":154},{"text":"and it says \"Great!\" Fantastic","width":102},{"text":"Now it's your turn to play: create a file and see if you can send some bytes to that file.","width":482},{"text":"You'll be using open(), write(), and close(). Bye.","width":169}]