that sphere. That's really cool, so now upon the this line, once we have that implementation, our sphere will be initialized to a unit sphere, because this constructor will be called. So now the next constructor, is not something that is different, in fact I wanna ask you whats the difference in the.. um.. function signature here, between the first and the second constructor here. there's no difference between, they are the same thing. If you put them one by one in your program, the compiler would complain because it would say a duplicate function signature. We can actually define it again, so you have to use one or another ... and the difference is ... there's no functionality difference, so it's functionally equivalent code. there's just slight performance improvement. Instead of initializing my member data in the function ..um .. body, I could have instead put colon here, and written the following: theRadius is gonna be initialized to 1.0. So functionally its the same thing. I'm saying that after colon, it will be initialization list. So this is called whatever follows the colon here, is called initialization .....zation line. And in that line, you put the list of things you want to internalize. And I could initialize theRadius to 1.0, it will be equivalent to the previous constructor, except that when you put in the initialization line, its slightly faster, for reasons that we will discuss later. It's slightly faster, so few things that are gonna be called, and we leave your function body here empty, however, do you have any questions? Yeah......[inaudible]. 1.0 depends on casting, your compiler could or could not. So.. usually it casts double to um...integers to double, so you could check when you are on a machine. Any other questions? [inaudible]. Very good question! So what if there was another uh member variable that is color, I would just put comma here, and put color and R, which R would have to have some tur-certain type and probably either a string of character whatever-however you define your colors. So, delimited with commas, and initialize the next set of variables. Any questions about this? Yeah? [inaudible] semi-no semicolon in the end.Just start your function body after that. So, curly brackets. I see a question here? Yeah? go ahead. [inaudible]. Array, yes! There are also some things that you in initialize, in fact you can even put some operators in there, and you could put variables in there, so there are some limits however there maybe..so you can put a lot of stuff except that you cannot really put lines of code to execute initialization line. So that's something that you will not be able to do. Yeah? [inaudible]. No. [inaudible]. No, that would not. So you have use one or another. So the question is, if I put them both side by side and have the same signatures so it would compile. Yeah? [inaudible]. It's called initialization line, and the things inside is initialization lists. So that's the name for it. Yeah if wanna find more examples, so you can Google for it. Yeah? [inaudible]. 