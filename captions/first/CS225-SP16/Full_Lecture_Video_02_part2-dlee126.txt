Erm ... backslash? Actually.... uh... Did you try?? Yeah. Okay , then you can do it. A character, right? Yeah. Yeah! Sure. Uh.. Another question is... will this compile now, you think?Yeah, so we can try. Let's try if this compiles. So lets see. And if it does, what do you think it'll do? It compiles so no mistakes, no typos. So I'm gonna run it...Let's see... I have a new file executable file that I'm gonna run now. And... it says hello world. So that's what we expect. So anything unusual or anything you want to discuss in this program that still bugs you? The end line outside of the brackets, here? Is that allowed? Well, so this is an operator again, that is defined. Are you asking why is it outside of this? Okay, so we are talking about redirection operator that tells me that all of the things that fall need to be redirected to the function so it is like an argument passed into the function, okay?
Semi-colon in the end of main. We discussed it last time, in lecture, that compiler will not be confused about not having a delimeter(??) there because it couldn't be any definition that would be followed by the declaration for main, whereas in class sphere, definition, I could be declaring before the semi colon, I could be declaring a variable. So there could be a confusion for a compiler so I need to put a delimeter explicitly. Any other question? Yeah?
Okay, very good question! So what if I had 1000 lines to print? Would I have to put std:: all the time in front of each of the cout that I called? No there is a short cut to simplify your code which would be using namespace std so that would save, within this program, if you see a function that you cannot find within any included libraries, or within c++, or my own file, then look within the namespace. Does that make sense? And then I could remove all of this. All of this mess. So it's cleaner, right?Okay, so very simple function. Yeah? That's fine. You can use as many. If you want to simplify your code, it's fine and you'll see that in your MPs. Yeah. Okay, now the next exercise is... so what we have now is this function, this program, that contains  sphere class, and contains the main function and I just separated them into two blocks for reasons that will come later and it's called encapsulation. So we'll talk about it later but I just want to plant a seed. Encapsulation will be one of the questions in the exam, what are the mechanisms for encapsulation that are implemented in c++ and erm... And this is one of them but I don't want to talk about it, just put the word out there. Okay so this is the program so far. Now I wanna start working with my class sphere and make it more interesting, okay? So, what I'm gonna do is, I do have class sphere that means I can declare a variable of that type, okay? So you think this is allowed? I have a class and I'm declaring a variable a of type sphere. Will this compile?