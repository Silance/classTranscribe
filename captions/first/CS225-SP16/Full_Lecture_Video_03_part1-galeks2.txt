and return getDiameter returns two times the radius. Okay, so that was our class function number function in quotations and then and then we also learn how to initialize a variable of types here and we knew that a default constructor would be called upon this declaration so that we know what this line does. But let me just overview certain things because we need to write down definitions exactly - mm, explicitly last time. So what is this double colon mean here? what is it called, this operator, what is it called? It's called scope resolution operator and what it does- what does it do? You remember? It glues what to what? It glu- glues that function getDiameter to class sphere, not to class circle, not to class basketball, not to class basketball field, or anything that might use spheres, but particularly this function to this class. Okay fine, so what is this keyword const meant here? Just to review what we did. Yeah? I pinky promise that this function will not change member data. Member variables. So will not change class data. Okay in this position, const means this. In other positions, and we'll learn how to use keyword const in various positions, in class sign- in function signatures but we would be jumping ahead if we discussed it now. But in that position, it means that. Yeah. Yes. Yes. Neither. Any- so the question was, does it apply to public or private? To both. N- there will be no class data, neither public or private or other access fields that we will discuss later as well, so no class data whatsoever will be changed. Uhm, okay which brings me next, so what do this public and private fields indicate? They indicate regions in the class definition which can be accessed via other pieces of the code. Right? So private, private field indicates all of the data members- variables, and functions cannot be accessed from the client. And public is something that can be accessed from the private. and we will talk about it in a little bit more detail in a bit. Okay. So now I want to talk about this line. So let's- let's go in depth here. As I said, if we had, and we- I think we ran this func- this program last time- if I declare s of type sphere, and try to print out the diameter of that sphere, the output would be garbage. Because a default constructor is called upon this line. So if I did not write any constructor and I didn't in my class definition so far, I don't have any constructors, a default system provided constructor will be called, and that will not assign anything to anything. So it's an empty [gape?]. Okay, so this is a chance, this is an opportunity for us to take control of how we initialize member data. Okay? So instead of me relying on system provided constructor, we can actually implement our own, and we should. Most of the time. And the way I'm going to do this, I'm gonna specify first the constructor declaration and this will be a default, no argument constructor, okay one that we can write, and um, take control or put the values- initialize variables to something predictable, but maybe maybe I want to initialize another instance of class sphere called t, with a preset radius say 2.5.