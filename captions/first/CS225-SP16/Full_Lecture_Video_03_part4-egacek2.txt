are parenthesis required for the second constructor? yea. You have to have the implementation so it has to have the function body. Its in the interface where you don't put parenthesis. Its either or. Its an alternative to make implementation slightly more efficient. So now i want to be able to also initialize or declare a variable of type t, lets say of two point five radius. So what would be the constructor that matches that constructor signature? The third one, right. So let's implement and I'm going to implement it in the following way. I'm going to say theRadius should be assigned to whatever is the integer parameter that is r. And here I should have some questions from you.

Why didn't I do it in the initialization line? Right, that's a valid question, right?
 So the answer is that I could. 

The correct answer is I could have done it through the initialization line.  Let me show you how but you may still not always want to. The idea is that you can put a lot of stuff including even optimizing slightly this function using initialization line. Instead of writing this, which ultimately in this particular example I will not want to do but just for the purpose of an example of what can be done with the initialization line, I could have put theRadius and assign r to it because initialization values could be variables, not only constants, not only one point zero, the color red. It could be variable r. It could be even r+1. So you can put even some kind of operator in there but in this particular case, I may not want to do that. Or let's put it even more carefully. I may not want to do that for the purpose being careful. 

Do you have kind of an intuition as to why I would not want to do it on the initialization line?

Some kind of safety check, right. Or maybe some other things that you may want to do, some other statements you want to do before assigning the value.  So in fact you can input a {something} operator in there and check for negative or positive. So that is not even a good example but just for the sake of the argument, sometimes you just don't want to put initialization in the initialization line because you want to do some steps first and in this example I could have asked, or checked, what if radius is positive, then I assign the value of radius to that argument else I assign the default value one. Does this make sense?

So you might want to do certain steps in the function body before assign your value. But still initialization line would work like that, without the safety check. Does that make sense? Any questions?

Okay. So lets summarize what we have learned about constructors. 

So first of all, the first point is that even without any of the implementation of the constructors, we could have initialized a variable to type Sphere because system provides a default Null argument constructor. The system always provides one. 