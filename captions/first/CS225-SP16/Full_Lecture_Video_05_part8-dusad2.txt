If anybody knows how to do it, please raise your hand. And we’ll go through the setup. You know everything. You know C++ already. Too simple. 

Let me ask you, how many boxes are there? Three, right? That’s obvious. Which means there have to be three variables. Two of them will have a name. The ones on the stack will have to have a name. Let’s name it X so that it’s easy for you. Because it has to have a name, right? The other one is on the heap, right? So it has to ask for it with the new statement. Right?

Anybody wants to walk me through? What’s the first? Should we start with X?
Let’s start with X! Okay, how do we setup the top part of this? So that takes care of, I’m gonna highlight, of which part it takes care of. Okay, It’s setup. Now, what about Q? So the type if X is what? Integer pointer, right? Because it has the address of an integer. So Q has to have a value which is an address of X. An address of integer pointer. Which means it has to point to an integer pointer. Which means it is an integer pointer, pointer. Right? And that’s gonna be our Q, and it’s value, it’s a pointer to type integer pointer. And it’s value should be the address of X and how do we get that? ‘&X’. That’s cool. That’s cool, right? So, I want you, for the homework though, we’ll do next time because I didn’t finish it in the last lecture, to think of ways of setting up a pointer to memory address to memory address that points to another memory address. So that’s an exercise if you get bored on what to do next, you can work on it, but we will work on it next time. But all this is very logical. It leads us to arrays. So now, I want to do one more exercise and we’re gonna be set for today. So what I’m gonna do, I’m gonna write down this code and you tell me how we should improve it to get it to what we wanna do. So I have a loop, that is very short now, okay? And inside of this loop, each timeI ask for, I set up a variable, of name S and type string pointer, and it asks for a new address. 