Okay, what else my clients want to do with spheres? Hmm? Yeah, so getting the information would be that, right? So getting the information could be getting the area, surface area of sphere, maybe volume, get volume, maybe get diameter, maybe get... many other things, right? Associated with sphere. Okay, that's one thing, get information about the current sphere. What if I wanna, maybe, change it? Right, what if I want to increase the radium or just change the class or any kind of data this is associate with this instance. So we might want to changing, change or be changing. So we might want to change sphere and as I said at the beginning just like declearing a variable, we created an instance so we might want to create more, right? So, create a new one. So these are three main functionalities that we could do with any class. And when you design your class, such as may be in mp1, you will need to design a Pixel class. You have to go through what you want this class to be able, what do you want your clients to be able to do with this class. Okay, let's get to the implementation of this. I am going to start implementing functionalities in the private field, because what clients want to do with the class. So they should be visible to the client code.This functionality and this functions must be visible to the client code. Okay, so let me start writing them, I am gonna to write them in public. But as I said, a private member was double radius. That's what defines how our sphere looks like and functionalities are going to be three: creating , changing and getting information about it. So the first one, creating an new instance, is called a constructor. And I am going to write one, and you tell me why do I know when I look at a function like this that is a constructor of the class. It's what? There is no output data or input. There's no type, return type. There's no return type, or in this time there is no input type either, right? But it doesn't matter, there will be different kinds of constructor and we will talk about in detail, you could provide the radius in the input.The main thing to see about ... two thing about constructor that it will tell me that it is a constructor. It doesn't have return type, no other function will...will be able to have that capability. And this is because constructors are not really called by us, the system will invoke the constructors. So it's a very special kind of function, it is always called upon a declaration of a variable of a given class. That's when the system invoke the constructor. So it doesn't have return type and its name is the same as the class itself. So, two properties about the constructor. No return type and the name is the same as the class. Okay, and my constructor I am gonna to put my function body right there. And it does nothing. Okay? So my constructor does't do anything to the instance. Okay, so my question to you is why did my code without defining a constructor? Why did this code work? I declared a variable, I just said that any variable upon declaration of a type class will call constructor, I don't have a constructor, it still works. Yeah. So if I don't provide a constructor and let me, I am...I didn't hear what you say. The default constructor will be invoked and how does the default constructor look like? It looks like that like this one. Okay? The default constructor does nothing. It looks exactally the one that I just wrote. And ya... it will compile. This would compile. Probabely I don't have to put this. Is that would be the same? Yeah, but you can. It will still compile. It's a delimiter sign. Okay, so let's see. So, will this all redoubt is it will be doing the same thing. Yeah, I tend to put some... Yes, because it's a delimiter, I could put two or you know three, it doesn't matter.