Okay? So one mechanism provides no access to chron and another one doesnt provide the possibility to see the code. So I have my three functions, I have my sphere.cpp that has to include sphere.h. Remember in order to compile it has to have .h included and you have your code in the next slide all of it. I have my .sphere .sphere.h which is a class interface and you cannot see all of it so it is getting back. And this is my main function and it has to include sphere.h. So thats what is indicated here in order for sphere.cpp to compile i have to have this file included and in order for main to compile I have to .h included and im going to do what ive said. So i have my three files there. In order to compile sphere.cpp, I have it with my c which means dont create an excecutable just create machine code so it can do without an excecutable yet. 

Does this suppy to the same group. yeah i think so but just check its been a while. I believe so.

Okay so we do this, and this should create an object for sphere. Lets see if i start a new file i got a new file .o. Okay so the next step is g++ - c main.cpp and is in mainline c this include means that sphere.h is like a text file. we dont really compile sphere.h its inlined with both sphere.cpp and main and thats what makes compilation possible. Okay so lets create an object for main. Lets see if we have main.o yes we got it and now we are going to compile them both together. and link them together into an executable. And lets see if we have an executable. And what should it do? Okay. Im going to run my code. What does my code do? I declare sphere, I do not have any constructors so which means a system will provide a default so if i run a executable file its going to be grabage Okay? so we got it. Any questions about this? so in this case we use both of the methods of encapsulation not that we needed to protect anything in this simple class but. So, Okay. So if you dont have any questions about that we can jump into memory because this is a very difficult topic. Its, there will be alot of interesting questions in the exam concerning pictures. And therefore since we will be working towards pointers we have to understands a little bit about how the memory is laid out and used by C++ and this is not the class where we are going to go into details at all because we have other courses about what is exactly the purpose of ram and how it is laid out but we will, it will suffice for our class to use the following analogy. So if this is a RAM chip right here, this is , do you see what this is. Satellite view of a neighborhood right? so some kind of satellite map and why we use this matter for describing how memory is laid out or because every entity on this map has an address by which we can access it the same it is for memory for every entity in RAM has an address associated it by which we can access it we or the system. So there are different ways by which the system uses it or allows access to those addresses so there is some neighborhoods and there will be four types of different address types so some addresses will have a barb wire fence around them because the system will not let any process to use that it only uses that for by itself and what can be stored there. What do you think? an example of something so sensitive that you dont want your program to access those address. System code. what about your program's source code. You probably will the system will never allow  to overwrite your own programs code while it is executing so something like that some source codes of various things so this is never allowed to be accessed. Now there is another very special part of memory. Which has an address 0, which we call do you know what that is. It is called null.