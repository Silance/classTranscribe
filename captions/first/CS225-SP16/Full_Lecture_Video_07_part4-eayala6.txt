and now [?] by value here, because will be passing that pointer by value. So its kind of very natural whats going to happen because we already how to pass a struct by value. So lets pass a pointer by value. So for that and i didn't put any asterisk here because i didn't want to show you something that's going to be mad about this method,that is syntax. so lets how many asterisk will have to put to make it work. Will first of all since im going to be working with the pointer, i'm going to declare B as a pointer. So after this declaration what happens? This is my stack and variable B is created where? on this stack its type is student pointer, whats the value of it, whats the address that it has. garbage! [] who knows where, we don't know. cool!! oh now we are going to initialize it so i want to make sure that instead of pointing to something potential bad and lead to undefined behavior i want to point it to some nice initialize stack variable. [] for student and itsintialize it and please raise your hand if your name start with a B. Whats your name? B. bun, bun, whats wrong. Ben ! oh my god im sorry. Ben.  duh.  im sorry its really hard to hear from here. really.okay. laughter. Ben and oh, whats, you seem very happy. no , now [] what i said that, he was kind of like what . maybe. whats your favorite age. 5 !! that's a new one. so we had 120 in another lecture hall. because i think 120 is a  really good age. but truly. okay ah, [] this [] thank you Ben. lets see what happens to be after we [] the next line. so we pass b, we pass the pointer, to oh information about Ben. what value to the birthday function. so s is going to be couple with b through the passing of the parameter. the questions is will the syntax like, like it is now will it compile. no why not, type mismatch, because the function signatures expects a student, and we send i a pointer. so we really have to [] we have to put asterisk here. and there then wont be type mismatch. you have to make sure there is no type mismatch in those assignments, because essentially its an assignment. okay and since b is passed by value, s become a local copy of b. what does this mean for s, to be a local copy of b. whats its value then?. an address of [] of Ben right. so being a local copy of a pointer means its value is the same address. That means in the picture it points to the same place. fine! lets work with it. now i want to increment h as dot.h ill take s and try to find the member of s, but s is a pointer it doesn't have value. ahm members. its a pointer just an address. so how do we solved that? dereference and now put parenthesis there. and i have a question for you. Why didn't i do this. 