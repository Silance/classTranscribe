Ahh, oh no. It let me do that. I just wanna keep it this way so that its short and I have really big font size. So, please forgive me. Okay, otherwise I will not get my program. Java heresy oh no. Okay, so um, this is why the default constructor looks like this and thats why I'm gonna eventually comment it out because I'm not gonna be doing anything interesting with constructors today okay? So I just wanna show you a simple example of how to look like and its not really interesting. Okay so the certain functionality was what? setRadius, the return of the setRadius would be nothing. We just set it so the return type would be void, and the input parameter should be the new radius so it should be double newRad. Okay? And so far I'm just gonna specify, I'm just gonna declare these functions not define them. And the next function would be functionality of changing sphere, and the third one would be getting information. So if I wanna get information maybe I wanna get diameter okay? So the return type should be double for the diameter and then getDiameter and then there should be no input parameters because I'm just gonna get them. Okay. So will this compile? No, it will not because I just declared my functions. It'll complain then, woah where are the defined? Right? So there is a choice of where I could define my functions right? I mean I didn't do anything in setRadius, I really don't change the radius right? So I have to put the function body somewhere. And I'll show you three ways of doing it. Okay? And the first one will be outside of the class definition. So I'm gonna write how to do that and then you ask questions if you have questions about it. So I'm gonna, and please let me comment out the constructor for now because as I said it's very simple and we'll talk about constructors later. It's just an illustration that it would be here as well, but I'm just gonna remove it for now because the default one does the same thing. Okay, so I'm gonna define setRadius now. Outside of the class definition. The return type is void then I have to say sphere::setRadius(double newRad) and now I'm gonna write down what this function does, and its assigning a newRad to the old radius (radius = newRad). Any questions about this? Why do I have the scope resolution operator? I could very good, but I'm not going to. But I could put in many of them, however why do I have to have the scope resolution operator here? Instead of just suggesting how we could go about it, explain why do I need it here? How many different classes I could have put here that would also need to setRadius? I could have defined class circle or class hypersphere, many other classes. So if I want to define the function outside of the class itself I need to tell the complier which one of them I'm actually defining right? Make sense? Okay, and then let's do double sphere::getDiameter() it returns diameter and takes no input parameters. And I need to return 2 * radius right? So I have a question to you. 