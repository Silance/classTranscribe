and returns whatever needs to be returned indicated by the function signature in return statement returns it back into the caller function. So main function loses control for a little bit and this shortlived function does something with local variables and returns the control back. So, in this particularly case, how do I pass my parameters? So I want to ask you some questions about this since you already watched. How do you pass parameter b? By what? By value, right. And we know that because we look at the function signature and see what? We see that the parameter that is passed has the same type and no pointer or no other flag indicating to the compiler that it has to be passed in some other way. So if by value that's the default way and you don't have to put any flags and this is our slide how parameter passing by value is done. The next 2 slides will be 2 other ways of passing parameters and they usually have a little different syntax. Ok, so let's start with passing by value and as I said my setup is slightly different. So lets go through what's going on here. My main function first declares variable a of type student and you can see the type student is defined as a user-defined typed and its a struct. So what's struct? It's a class in which everything is public. It is similar to C. Who knows C here? You know, if its similar, is it the same thing or not? In C, structs would not be able to have functions. Here, struct is really just syntactically absolutely equivalent to class, where everything is public, which means that it can have functions. Ok? So it's not the same thing as C. C is struct. Ok, that's cool. So I can put structures there, I can put functions there, it will be fine. And my class has a name, like PNG, something like your MP2 and an integer age, ok? And I'm going to populate, so I declare variable a. Its going to be on the stack or on the heap? What's initial values for name, face and age? Garbage. That's why I have this lines here that I didn't specifically write but they do initialization. So can I initialize it to Anna, that's me, and I'm happy today, and this is my favourite age. The question will be I will not be prying on your personal information if we will have to indicate what's the favourite age of a person. Mine's 27. Ok, so let's see what happens next. The next line says that its an assignment statement.  So the assignment statement, the system will be handled in the following way. The right hand side is  evaluated first, the left hand side next and the assignment is being performed to the variable on the left with the value on the right. So, the right hand side calls for birthday, which means that the control is now given to birthday function and a is passed by value to s. Upon that passing, a local copy, do you remember local copy? Is it on the stack or on the heap? On the stack, because it has a name. On the stack, a local copy will be created. And how is it going to be populated? What's the default copying mode in C++? 