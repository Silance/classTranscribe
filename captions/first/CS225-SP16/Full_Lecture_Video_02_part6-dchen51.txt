I can call a setRadius to say ten, and then intsead of printing string hello world, I can print out getDiameter.  To access members of a class I use dot.  So, do you think this will compile.  And i'm sorry, but things don't really ... look.  They're not compressed enough, maybe I can make it tiny bit smaller, ok.  I just wanted all of the function show up, almost alright.  Ok, so will it compile?  Yeah? Ok, lets try.  Compiles and the result should be we set it to ten, so the result should be twenty.  So I have a couple of questions.  If I can access setRadius like this, why can't I just say a radius equals 10.  And what will happen if I do? It's private so will it compile? No.  It will not be allowed upon compilation, so there will be some kind of complain from the compiler, and actually in this case it's pretty explicit.  It say's it's private, so don't do it.  It's not always that error messages are that explicit, sometimes you have to work on it.  Ok, yeah?  Why is that your getDiameter function can use radius?  Very good.  So why, thats the next questions that I wanted to ask you.  So why can my get setRadius and getDiameter  at the same time can access radius.  Yeah?  [Guy answers question, too low for me to hear].  That's how we define the usage, or the use of these two fields.  Public can be accessed from the client and private can be accessed from the public.  So any member inside public, such as getDiameter and setRadius can actually use and modify radius or any private member.  Make sense? Ok.  So this is the control path alright.  One of the methods of encapsulation.  Ok, cool.  Um, do you have any questions about this, or do you have anymore questions about this. Let's see, maybe I had some other thing, some other points to point out here.  Yes, so I have a questions to you, another question. Why would I put the function definitions outside of the class definition?  Why did I put them outside? And I wanna go back to my slides because now i'm gonna go through different ways of writing this code, and this is the first way of writing this code, that is first class definition with function declarations only right?  Next, is member function definitions, and after that I separated the code within one program, within one file into three blocks, and next I have my main function.  So, why did I do this?  Why did I put them outside?  Do you know the reason?  [Guy answers question again, but it was too low].