Ah... and the argument to null is a type of thing but rather than asking for one of those things from the heap we are going to ask for a block of size of them. And size can be evaluated at one time which means it can be conditional to fell like a small laundry today. Right? Can be user input, can be enter the size you would like and program can handle it. Here's what happened on execution. A block of memory, let's see what is the size, it's three of them, is all allocated each one of these things is an integer. I am gonna to change this to type. Each one of these is integer. And the location is chosen for you by whatever is administrated in the heap. Okay by the operating system. All right and at that point though, after that memory is allocated, we can use x just like any other old array. So I can do what I did on the previous slide except correctly and give that value 0 no 3,4,5 to these array locations. Okay, everybody put your finger on X1, the value of X1. Put your finger on yours, don't point this time. On your paper. Put your finger on the value of X1, did you all put it here? All right, so here is what happens. Here's what's happening? When I say something like cost x1. And to think about it but only think this once, okay? Start with a pointer x, square brackets are just like dereference. The square brackets says "Oh x is a pointer and dereference it". Okay, just defer it a different thing. That is follow the pointer and then what you see here? That is the number of steps to take forward. So take one step forward then you get to the right place. All right, so syntax associated with an array here. The syntax associated it looks just like an array that you learned back in computer science kindergarten. Really now means something that make sense in the context pointers, means dereference, takes steps forward. Now you never need to think about it again. Let's treat it like an array. I did say one thing  though merits some discussion. And now let me tell the delete first and then go back. Okay, so this is memory allocated on the heap which means we need some macinism for giving it back for freeing up the memory to be used by another process. We do that simply by specifying square brackets in the delete statement. So it still matter of giving a block of memory back and I believe the compiler will warn you if you do this wrong. So I think if we just said delete x, the complier will go umm...., you use the square brackets before you'd better use it again. Okay, all right, what I am gonna to say earlier? Oh this was important, what was it? Hum..Oh,  I know what it was.Think about this new thing in the context of constraint of stack array. We said that stake array was good for fixed size things, so this implies maybe these are good for not fix size things.