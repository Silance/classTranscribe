Okay. And so now I have a 10 by 5 array or 5 by 10 array, however you prefer to look at it. Is that clear? It will be if you digest it a little. Okay. So, actually, I have a few things I want to talk about before you leave in 3 minutes. Oh, we can do this, no sweat. Well, turning onto another subject in the course at this point and that is, we're going to think carefully about what happens when program control passes from a main or a calling function into the call function. What happens when you make a function call. In particular, we want to ask what happens to the parameters, and later we'll talk about what happens to the return values. So, what I want to tell you today, before you get into the interesting stuff next time, is what C++ does by default. Okay, so, by default, in C++, parameter passing is called pass by value. And here's how it works. I have declared, a little struct here. You should know struct at this point to be a class, where everything is public. They're exactly the same to the C++ compiler. Just called the struct (??). This one is very similar to the face we saw in the previous example. Expect, in this case, I'm using the boolean to tell whether or not we have printed something. Okay, so here's the calling code. So we're going to start there. We're going to initialize scene a. Raise your hand if your name starts with a. What's your name? Andra? And you're smiling. And you've not yet been printed. We're going to make a call to function print.student1 and we're going to send a through the portal. It's interpreted as s on the other side. Here's what happens by default. S is a new variable set up on the stack and the elements of a are copied member wise. That is, strings know how to copy themselves, pngs know how to copy themselves and booleans certainly do. Okay, any questions about that? Do you like it? How do you feel about this? Yeah? It's a waste of time in a lot of circumstances, that's right. So, that's the cliffhanger right there. That's what has you coming back on Wednesday. This is what C++ does by default and, yet, it makes you uncomfortable in terms of the time it takes to copy anything that's not a primitive type. Okay, that's it. 