okay, so it says integer x equals 5, which is kind of irrelevant. Here as you can see, and this is 37, and the question is what happens if I print [gibberish] out x and the next question will be what happens if I print out p. And then the third question will be if I print out *p. Okay? So what happens upon this [...] line? Does anybody want to answer, I set a variable x with value 5, I set up a pointer [...] So lets see... Corresponding to this picture I have a stack and I have a heap, I set up x to be 5 of integer type, I set up a pointer p to point to an integer, so it's an integer pointer with  nothing defined to it, and then the next step says follow the pointer and give 37 value to it, when is it gonna follow? The [gibberish] but that's not exactly what's going to happen, once we understand the current value of p, what's the current value of p? Garbage, which can be interpreted as a pointer. Where does it point to? You know what? It can point somewhere. and that's the biggest problem with this code, it's called an insidious bug. There is no way of knowing where it's going to point, it can point to somewhere that we you already using a variable at. It can over ride your own variable that you already set up in stack or the heap. It can be inaccessible memory location, and that will result in run time error. And there can be all sort of things happening here at run time. So it's run time error or not. And that's the problem about it. Because there is no way of knowing if you have a bug or not. Okay, lets run it... Let's see. Oh..oh...wait... we want to print out first an address of x. That will just print out an address of x. So lets compile it, my program currently is this, and lets run the executable, and the address of x is that hex number, and that how it looks like on my computer, okay? Address of x. And now I want to print out p, what's p's value? Yeah, lets look what there, what's the garbage that we said about? Another memory address right? Okay. Now what if I wanna print out where is points to. So now lets go to that garbage location, and now for that value, which should be an integer, and lets see if that works. It didn't. That's where it actually broke, Okay? It didn't interpret it, it couldn't find integer there because it's garbage. And it didn't break so it didn't give me any kind of problems with it. So it's a very dangerous thing. And now next time I will have more example to detect it and diagnose it. [Gibberish]