What the system will do, will do, after seeing this statement. So what's happening here? um. and the system will say well, "its kind of very similar, uh, you ask me to initialize a variable with the name p, so i'll give you the address for that. it may be a60 and the type of the thing you'll want to store or the type of this variable is integer pointer. or integer asterisk."  Which means that the intent is that this variable has a strange type, called integer pointer, that is, that means that the value of this variable should be an address of a variable of type integer. so we will, we want to store here, so uh let me write it down, p's value is memory address of type integer. Okay. So that is the intention, so we want to store variables whose values are not just types that we considered before but pointers to those types, that is, the values are/at memory addresses themselves. okay? okay so tell me please what values can be stored here associated here with this type and we have only one among all of the variables initialized on the stack here, what would that be? [you know all answers, someone else say, oh, oh, sorry sorry, because you know, huh] NULL would be good but that's jumping ahead. good, hold onto that, so among the variables that we have, which one of the addresses would correspond to the type of p, yeah, a40, so we somehow want to put a40 in here, okay, want to put a40 in here, the question is how? thats a good question, so we want to initialize p to a40. but how would we do that we don't have syntax for or mechanism for doing that yet. That's going to be on the next slide. but that's the intention, right? and the picture will be something like, well my variable p is a pointer type, that is, its value indicates a location where an integer is stored. So it points to an integer variable. makes sense? okay. so thats cool lets look through the way of initializing pointers . so I'm gonna look at my first block here. and see if this declaration corresponds to my picture here. Do they? So lets go line by line integer x declares a stack variable with some location the system will give us and value upon this declaration the value of x will be garbage. but we have 5 here. so something does not compute, right? so we have to say, we have to insert another statement x equals 5 then 5 will be right there. and then the next statement  will declare p of type integer pointer. so we'll want to have an integer address here. and there will be location in memory for it. so the next question is how do we assign to p the address of x? right? could I just put a40 here because that's our intention.