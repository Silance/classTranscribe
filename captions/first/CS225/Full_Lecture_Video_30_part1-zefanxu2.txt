I am going say like this, implementing adt dictionary
ok so the minute i say that
you know already
what the interface is
you need to be able to give a key
find the key in the structure and return its value
you need to be able to insert key value pairs 
and remove based keys from the structure 
so its sort of key-eccentric structure and all we do is to
put stuff in and take it out
particular application beyond that is up to you
ok, so I think we might talk about this before
suppose this is what our data look like
we have a student and a locker
how can I where this is the key
and this is the value or the data associated with the key
how can I implement inserting removing find efficiently if I want out of the structure
is name given this particular data set
what would be an efficient implementation of dicitionary
yes?
a tree?
sure
we could do that, but it would take long time to figure out
an array
look these locker numbers, if you winkle eyes a little bit, maybe you don't have to do so
they look like array index
the happen not to be in order but they could be
so its perfectly reasonable to exploit the fact that our key is smallish integers
and to place the values in the array entries
so this implies use an array
any questions?
ok
but we know at this point the keys and values don't necessarily come so conveniently posed
that in fact our keys might be things that are more interesting
wouldn't it be kind of cool if we could take a key that is say a fight number and think of it as
array index
hello
wouldn't it be cool we did not constrain the index the kind of things we used for index to integers
we could use strings or what ever else
object of any particular type
any question about that?
that is kind what we are gonna do
we are gonna do that among other things
a color as a key, you know usually a triple RGB value
especially for us
we don't necessarily know what a color looks like
what's it representation is
but you should think it as an arbitrary type
it is an arbitrary type, an user defined type
any question about that, would not it be cool?
the answer is yah it would be cool
let's see what we could do
ok here is a dictionary you are familiar with that
we are gonna define this new interface
the most implemented dictionary called an associated array
all an associated array does is that it overloads the []
you can barely see it, there is like one pixel space there between the brackets
so it overloads the square brackets
so you can use them as if they were  array indicators
so, for example
we can define a dictionary to be this associated array which we are gonna give it a different name in a minute
and use as a key some strings to store the data
and conceptually what you might have going on
is you have this array whose index are like strings
and whose values look like ages
and what conceptually going on
