Ok, so this is called, ah, double hashing. And hash function looks something like this. It probe based hashing, so you are going to count, umm, the number of probes that you need to do to find an empty cell. You are gonna count them using this index i. But this time, that number probes is going to have a coefficient which is another hash function. So, I'm gonna do the example with the following two hash functions. Our first hash function is gonna be what it was before h1(k) is just k mod 7. And h2(k) the one that determines the step sizes is going to be umm. Oh what was it. It's 5 minus k mod 5.  Ok, and I pull that out here. I understand that I pull that out here. Ok. And that's just the example that we are gonna use. Umm, internally, umm but [reos]. Different hash function are used. But this is actually don't. Ok, so how does this work on our particular example. These are the same numbers as last time. So I know how to hash serval of the first ones of them fairly quickly, umm, that is, they work with i=0. 16 hashes to 2. 8 hashes to 1. 4 hashes to 4. 13 hashes to 6 and now let's look at what happens to 29, ok? I'm gonna show you explicitly the functions. h1(k) is 29 mod 7 which is 1. Ok? So we  try hashing to cell 1. Umm, h2(k) here is. Oh no, I forgot that this happens. 5 minus 29 mod 5 which is also 1 shot. So in this case the step sizes are 1. Ok? how can I fix that, I don't know, not on the fly. So this right here the distance is h2(29). Ok? So then we have to, you know, that one is occupied too. So we have to do it again. And in that case we move on to i=2 and there is room so we plump 29 down there. Ok? Maybe we should do another one. Let 5, 11 mod 5, ok this one works. Let's do 11. h1(11)=4. h2(11) is 5 minus 11 mod 5 which is also 4. ok? But this time it's ok. So we attempt to hash 11 here. But we can't, so now where do we go? 1,2,3,4. Our second hash of 11 is here. Ok? Becuase, oh so we need, yeah, yeah there is gonna be a mod of 7 at the end of this. That is we wrap around. And now we do 1,2,3,4. 11 maps here the third time. Ok? Any question about this? Kinda mechanical. Kinda mechanical. Sort of unsatisfying a small example. So again, it will be nice to have that [appli] fixed. Send me an email if you love doing interactive web stuff. All right. Any question about it. Yes, 5 I chose, it works nicely if it's relatively prime to the table size. But those for number theoratically reasons, umm, you know, has to do with the group and the e... Just what happens when you have 2 numbers that is relatively prime in cycles within those numbers. So you will never get on cycle, with 5 in 7 you will always good of one of the numbers. Does that make sense? All right, so the hash function. I pull it out to here. You will not gonna ask you'd come up with that. We'll ask to deal with ones that we give you but we won't ask you to come up with them. Yeah Arman. Ah temporary variable? A variable that only exists only inside the hash function? 