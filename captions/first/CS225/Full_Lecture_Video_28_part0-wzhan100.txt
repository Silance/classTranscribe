Ok let's work. So I wanna talked for a minute about the exam coming up. Tuesday. So I wanna make sure you hear these words, the exam is on Tuesday, not Wednesday. Wednesday was pain in the ass we did like it very much. So we are moving it back to Tuesday. I'll leave it in red for you. Umm and the conflict exam should you needed is the following morning, so that will be Wednesday morning. Like to get all those taken before, umm, class meet. But we can be a little bit flexible inside the morning window, the larger morning window. Umm, let's see there will be reduce sessions this weekend and still waiting to hear from course staff when they would like to do them. Umm, and from room reservations actually with them we need to make the room reservations. Then we will let you know. So umm if you are not yet connected to the class on the piazza. Now it is the good time to do so. Because that's where we will announce it, that's where we will announce the review sessions this weekend. Umm, we talked about this moring in the format for the exams gonna be very similar to those of the pasting exams. Umm which means multiple choice, lots of running time questions. So we will paint a little scenario for you and ask how long will this take, how long will this take. Umm and let's see, and then a couple of programming questions or, you know, did understand the work you did for the MPs type questions. One thing that will be different is that there will be an exam booklet decoupled from the exam solution paper. So just sort doesn't surprise you. You will be writing your solutions on a page that we will been scaned for improve the effeciency in gradings. So don't let it surprise you when you get there and you exam booklet is seperate from your long solution paper even. Bubble sheet does well of course. Ok, I think that's all I'm wanna say about the exam today. Like I said, we will keep your priced of oppotunities for review. Are there administrative questions before I start? Do you have anything you wanna ask about it? I really told you anything so. The material to be covered is everything from stacks and queues through Friday and if I don't start on the material you'll miss out on the chance to be tested over B trees. So I'd better get started. Umm, last time we sort of refreshed our memory for the definition of big O. The key observation here is that we are looking at, we are trying to assess and upper bound on the running times of algorithms. So in this definition, f(n) represents the true running time of our algorithm. Ok? Represents the true running time of our algorithm. And g(n) is some function that we use to communicate its quality, the quality of the algorithm or the speed of the algorithm. Quality. Now, that's said, that's said, this inequality, this inequality allows us to make g as big as possible. Right? But, smaller is better when you talking about the quality of a running of an algorithm. So typically  when we talked about the big O. And we have a function here. We want the lowest possible version of that function, the lowest possible of function that we can put in there. Ok? So we want, we say we want a tight bound, tight upper bound on the running time. Umm that is, again just re-iterate because we use this big O to reflect the quality of our algorithm. Nobody who can run a four-minute mile goes around saying "Oh yeah, I can run a mile in less than eight minutes", right? That's what I'm talking about here. They say "Oh yeah, I can run a mile in less than four minutes." right? Like they get down as low as possible. 