Okay, so I don't think we will have the sound today, but this is where we are going to start I know its like the most important part right. Ok, um, So yesterday so Ill get back to the announcements, do you think somebody is chainsawing a tree upstairs or something. Ok, so its not my fault this time. Ok I always like that because minds to time it is. So we have here a binary search tree, one way of checking is doing a in order traversal of this puppy, printing al the values in order and going back and seeing to actually see if they are in increasing order. There is a very quick way of testing to see, but of course the most reasonable way is to wonder and to ponder whether or not this is a binary search tree, is to observe that am actually presenting it today. I wouldn't do so if it was so different from the topic of today. I want to know two keys in order that if inserted to the tree would be siblings. So think about that for a minute, two keys that if we inserted them into the tree the result would be siblings. raise your hand when your ready for a n answer. Going old school here. Yea, okay 53 and 55. I have always asserted that to always to use the chalkboard in this you have to write in a font that is that big. So can you guys in the back see this, but I bet you cant see this. Alright, so lets insert those values does anyone disagree with that. Anybody think that those are crazy numbers? That won't work. K 53, so I better do this, oh I know, and it was fine before. You wanna try again, no, 21 not good use of class time. Alright, sorry oh this is working better today, boink, boink boink. K and 23 once, K click. 23 insert boink, boink, boink. Alright, any questions about it. Okay lets see, so any questions? I just wanted to start here so you kind of remember where we were. Last time we spent a good amount of time talking about a removal from a structure like this. Would you like to see anything in particular removed from this structure? I do, I want to see 35 removed from this structure. What I want you to do, is  speculate on whats going to happen here and observe that the order of the tree of the structure of the tree can be changed without messing with the order of the tree. So the structure of the tree itself, there are a lot of binary search trees with that collection of keys, and that we can mess around with where each key dwells in the structure. Thats sort of the argument behind the fact that whats gonna happen when we remove 35? Whats gonna happen? Somebody raise their hand their hand and describe it. Somebody recall. Yea, Mike go ahead. Ok ah alright raise your hand if what he said surprised you. Go to the right tree find the left most child swap it up and then cut off that 36. Raise your hand if that surprised you. Nobody? You and I we were both surprised we were both surprised and we are the only ones. Were the only ones. Ok fine It surprised me, I wont make you say why it surprised you. It surprised me because I thought that he was gonna say that it was going to do this. Um, uh oh, I don't know what that was. Ok um I thought he was gonna say, ok delete, oh, oh.