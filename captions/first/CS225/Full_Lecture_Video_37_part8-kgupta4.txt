So there are actually few different algorithms that do this. This particular one was made using MOSS - measure of software similarity. Which is probably the most widely used in courses like this and I tell you this now, I used to not tell you this because I wanted to keep this on the down low but lots of students know and so it's unfair because students will exploit and you can go google how MOSS works and I think it's unfair that some people have that advantage over people who are oblivious so I'll tell you. We used to use MOSS and it's done and you can go look it up and it's done by looking at strings of code and I believe that it does not look at the compiled or the partially complied code. There are new tools out there that some of our grad students are developing and they actually do look at the syntax tree and things like that so. Alright, so my least favorite graph. So here's what I really want to say about this. Oh my gosh. Here's what I really want to say about this. You are all extremely fortunate to be here. This is an amazing place. The people sitting around you are all amazing. But you also deserve to be here. They don't let anybody in here out of pity. Right? So, this is an amazing opportunity to grow and to challenge yourselves and you know to know walk in this community of achievement and discovery is a better way of saying it. If you do this, you hurt everybody. Right? Like you cheapen the value of your degree, you risk your degree. But most importantly, you don't grow in the way that we think you can and want you to grow so there's the incentives to not do this are actually really huge. Now if you ever have that feeling oh it's 11:59 and 59 seconds, and this is your out, oh my god come talk to us. We'll figure it out. We'll help you figure it out. You don't have to do that, there's other ways. So we hire the TA's because they are good teachers generally, generally really good teachers and we have never seen a connection like this with a TA or a CA. So I think what happens, is that your random friend who gets an A in your class looks at your code and go "oh I don't know what you're doing, here's what I did" and then you're lost. And the CA's will never do that, that's not what they do. So that's the difference right there. The minute you look at somebody's code, your ideas are shake. It's over, you run the risk of it being over. I'm actually doing it for Laurence in 241. So the comment was shouldn't we start the semester with this talk and that's probably true, yes we should. Point taken. Alright, Happy Thanksgiving! I'm thankful for all of you. 