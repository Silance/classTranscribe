Raise your hand if you think 1, raise your hand if you think 2, you cant.Alright spend three minutes and so this is for a greater than or equal to 1. This whole..recurrence is still N(-1)=0 and N(0)=1. now you see why we need two base cases.You need 2 base cases because our original recurrence has 2 terms otherwise we could get to next one and we still need 2 base cases because otherwise we only either get all the odds or we get an expression for all the evens.One or the other.yeah arman?. Oh because it doesnt hurt us to do so its ok. And this a >. Okay. And i only pick on it because we are doing a lower bound and i want to associate lower bound with something > bound so it is reinforcing should have been in these few minutes scratching down a guess at a closed form of this recurrence. Does.Does anyone have it? Do you know what the solution to the recurrence looks like?No way.It's just this one right.So every other time we are inducing a factor of 2.So 2 factors created 2.So its sort of like root 2. 2 to the power h/2 and this holds when h>=0 So I am gonna switch the inequality there, this is like playing with the k a little bit.Alright any questions about it so far.do you believe this closed form for that recurrence? you should not be nodding your head instead you should say oh yeah? Prove it and how would you prove such a thing? yeah alright so an AVL tree of height has at least 2^(h/2) nodes for h>=0. we are not gonna try to prove it for empty trees it just doesn't matter. ok 2 base cases in the recurrence imply 2 base cases in the induction and the two things we are going to compare are the number of nodes compared with the expression so we are gonna have an argument about number of  nodes we know to be true and the expression.2^(h/2). ok so the first case is h=0 what is the number of nodes?n=1 and the expression gives  n(0)=2^(0/2) so does it hold is 1>= 1? yay. okay .So this is the >= portion.Okay. this is h=1 how many nodes in a tree of height 1.least number of nodes is 2 and the expression gives n(1) >=2^(1/2) oh o. 