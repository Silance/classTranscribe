And the implication there is less than < is defined on keys.Right? And we don't have that constraint for hash tables. Alright so why do we talk about balanced binary search trees at all if hashing is so great? The answer to that is simply that AVL trees get us something else. They get us nearest neighbor search. They get us the ability that if we have distance defined we have the ability to evaluate how close we are to a particular key where as in hashing two keys that are close and distant could be way far away from each other in the table.So, BST assure that similar keys are close to each other in the tree.Hashing doesn't give you that.No such assurance.Hashing can make no such assurance now what does this mean. It means that I can say to an AVL tree, Ok here is a key I know it's not in an AVL tree but give me the closest one.You cant do that in a hash table. If I come to a hash table with a key and say I know this isn't here, give me the closest one it will go what and not be able to respond efficiently.Alright ughhhhhh.wghh.