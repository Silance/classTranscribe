And then...how many edges does it have? Well this is just another way of saying n-1 because the size of V is n, okay? Alright. So, what we're gonna do is, we're gonna consider a random, or arbitrary minimally connected graph, okay? I've drawn a picture of one here. We can just pretend like that was the one that was randomly given to us. And, we're going to let v and e denote it's vertex and edge set. Now, there is a lemma that we're going to need, and that is that every connected subgraph is one of those definitions, it's like a subset of these with some constraints on them. So every connected subgraph of G is minimally connected, that is, if you take a connected subgraph and you remove and edge, it will fall apart. Now, there is an easy way of proving this, and the proof goes something like this: if the subgraph is not minimally connected, then you could remove and edge and it wouldn't fall apart, but then that would be true of the super graph too, the larger graph too. And we already know that the larger graph is minimally connected . So the proof is sort of unsatisfying. Easy proof by contradiction. Okay, finally we have our inductive hypothesis. And I'm going to state this upfront here, because I want to be able to cruise through using it, without taking the time to state it. Now, notice here that all I've done is Ive restated the theorem, for smaller graphs, for smaller graphs with fewer vertices .So it just says for any j less than the size of the vertex set, and minimally connected graph containing that lesser number of vertexes has j minus one edges. That's the inductive hypothesis. And I'm gonna ask you when we're going to apply it. So let's do our base case. A minimally connected graph of once vertex has no edges. Is that true? Here, one vertex is minimally connected. How many edges does it have? None. Okay, done. Alright. Now, here's what we''re going to do. We're going to take a larger graph, we're going to break it apart. We're going to break it apart like this. Were going to pull out any one of the vertices. Any one of the vertices and it's incident edges. Okay? Alright. Remove it's incident edges partitioning the graph into, uh oh, how many components do we get if we pull out that vertex and remove it's incident edges? How many components do we end up with in the graph? D, and then whether or not we count this one D+1, okay ?So we're going to get D+1 components, where c-not is going to be, you know, the vertex that we remove. Choose any vertex w, and the edge set is empty, and then all the other components are going to look like this: here's component one. Here
s component 2. Here's component 3. Okay? Now I'm going to ask you, how many edges do we have in the whole thing? All we're going to do is count up edges. Alright. How many edges are there in component k? That is, what's the edge set, the size of the edge set, in component k? In any one of the components. You know this. You know how many there are. 