Alright, let's start.  I never get it, it must not me. Okay, um, I have no news on the exams. I just don't know yet. I was there yesterday afternoon, and there were still two blank columns or largely blank columns for problem 22 and 24 something like that. So I have absolutely no clue about averages. All I heard is we should draw a picture for perfectify. I don't know, I am not even make a promise when those exams are going to be available. Not gonna to promise anything because you know what course staff tole me. I said I want to get this done by Friday, we can get this done by Friday. And they said you shouldn't promise Friday. And I said no, if I promised Friday we will make it Friday.  And they said you shouldn't promise Friday. And I completely ignore them, and they were right. So, I'm sorry. Always listen to the course staff. Hmmm.... Alright, um so, mp6, oh let's see there is a social announcement is the semi-formal tonight. Raise your hand if you're going to the semi-formal tester street art? Nobody in this room? It's like WCS, IEEE, ACM. Every student organizations between ECE department and CS department combing to do this fancy party tonight. Suppose to be really fun and I think they still have tickets. Look like there is about a hundred people going. So, including some cs225 course staff. So, you don't have anything do tonight um it's a facebook event you can get there. Is anybody going? really? nobody? Didn't know about it. Alright, nevermind, don't go. It's your thought there, what kind of party possibly be. Um, alright, let's see. So, give me one more description of that thing. It's heap, that's right that's a heap. A two words description, I want a two words description of the abstract data type where considering using a heap for? A priority queue, very good. So, this structure right here is our latest, greatest, attempt, and clever cause we are also clever  implementation for a priority queue. okay? what uh abstract data type, I'm sorry, what implementation do we try before? What are we trying to improve over? Do you remember from last time? We first implement a priority queue with just give me one. A bag? right, yeah the bag didn't work out so well. What was the implementation? A linked list, sorted or unsorted? Either we try both. The other linear structure we try is an array. Sorted and unsorted. And those all you know they have things that we liked about and they also have things we didn't like about them. Alright, that's all about last lecture in the show right there. Alright, this thing is a heap, how do we implement it? how is the, what is the implementation of a heap? What structure did we use to implement a heap? An array, that's right. So that's a piece that the first length is a little counterintuitive because this thing is  a binary tree right? And all the binary tree we talked about so far have tree node pointer, and been recursively traverse etc. This one is a little different. Characteristic of a heap allows that. Allows this implementation what characteristic of a heap allows an array based implementation. 