alright fine
whatre the running times of those functions
they are big o of n but you can say something tighter
something faster
remember big o of something is like less than or equal to
and so you can say they are  big o of 2 to the n too
what is the very least thing you can say
the very tightest thing you can say
log n is correct that's right
we showed we argued that these things run in time log n because the height of the tree
is log n and the navigating for the code is the height of the tree
okay fine
this structure can be built in time 
how long does it take to build a heap out of previously unordered data?
do you remember?
you put all of last time's class pretty much
a huge portion of last times class
yes linear time
so we can build a heap really really quickly
big o of n is the next blank
that helps us do the first step in doing a sort called heapsort
the running time of that is ........
n log n that's right good okay so that's the summary of last time
anybody wanna close the loop for me on why that picture reminds us of a heap?
if you build a human pyramid you put the lightest person on top that's right
and if they get removed you have somebody climb up
wait no
not that
okay
lemme see how we're doing here
oh my god
its gonna be a long day
okay
um
so
if I actually had my laptop i'd advance the slide
remembering cs173 
and the verbage says let r be an equiv relationship
we have an equiv relationship on you
where any pair of you are related to one another
if you have the same favorite among this set
before we actually talk about this
wat goes in the blank in that set?
the set contains a lot
whats the last one?
depends on the others right?
its probably obvious
fb is not facebook
no its not
its not football either
that's what we say when you're taking an exam
first blood
is it cruel I don't know
its funny though
whats cc
not carbon copy
not nearly so boring come on
what did you say?
captain crunch?
that would've been good though
