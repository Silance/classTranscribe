Now you're allowed to tell me the plus one minus one stuff. Two to the h plus one minus one. Should I believe them? And that,s for h greater than of equal to negative one. Oh yeah look at that it works. Should I believe them? No! We should not believe them! How do we prove it? Yes! This is like day one induction. This right here is like day one induction. Super easy, in fact, I'm going to call it, back of the envelope induction. Okay? I already eyeballed it to check to see if the base case worked. Did you see what I did? I eyeballed the base case by plugging in h equal negative one. Okay? Eyeballed, checked. Did it break? No. Two to the zero minus one is zero, m of h is zero. Now what is my back of the envelope super quick evaluation of the recurrence, the recursive case? M of h equals one plus two times, what goes in that box? Two to the h minus one plus one minus 1, all in parenthesis. What did we do there? We applied the inductive the hypothesis, but I didn't write it down and that's okay. Don't tell Margret. Okay, so what went on there? The inductive hypothesis was applied. Okay? Any question about it? Is that okay? Tell the person sitting next to you if that's okay and I won't watch if that freaks you out a little bit. So I'm assuming you can be candid with your friends, so have a minute of discussion. Have a minute of discussion, please. Like okay, not okay, I can't believe we're doing this, it feels revolutionary, but okay. Is Margret still watching? Oh my gosh, I just asked for class transcription too, shoot. Alright any questions about it? I'm trying to get a pulse of the class. This is how grown ups do induction. Okay any question about it? And it all works out, you do the math and it all works out. Oh look, I did all that arithmetic in my head. Aren't you impressed? Kidding. But we're not done, here's what we know. We know that, I'm going to say this in English and write it in math, we know that the number of nodes in any tree of height h is less than or equal, it's no more than, two to the h plus one minus one. That doesn't say anything at all about our algorithm, that's not what we want to say.H represents our algorithm, the running time of our algorithm. So, all we have to do is invert this function, okay? I'll race you. So, it looks to me like this one goes to n plus one, oh I better take the log of that, and then subtract one from the whole thing and I have h is greater that or equal to log of n plus one minus a constant here. Okay? Now how do we say this using the discreet math that we know? We say that h is big omega of log of n. Okay? Do we have all the pieces, h is at least some constant factor of log n. Alright? Two of them