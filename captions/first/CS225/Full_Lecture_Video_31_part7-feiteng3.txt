So it turns out you can not avoid collision. You just can't. They are going to happen and the question is how do you handle them. The results you see here are classic approaches to handling collisions. You will have better ideas, but everybody in your world expect you to know these ideas. Ok, everybody in your world is gonna expect you to know these and in fact all of you better ideas are going to be modificative. Almost all of your better ideas are like to be modifications in some sense of these. So the first one we are gonna talk about is separate chaining. And thats the vocabulary associated with it. There's additional vocabulary. It is know as an open hashing strategy. Now the reason for that is we are not going to put all of our data in table. Ok. Instead we are going to use the table to gain access to the collection of our data. Alright. So here's what this looks like. So here's our particular set. Here's our set of data. We are gonna say in general that the set of data is size n. The size of the data is n. And our hash function is easy in this case. It's just k mod table size. It's the key mod table size. Now if you want to, you can imagine that our key spaces is actually more interesting. And we apply some other hash function to get down to this integers. And now all we are doing is making it fit in the table. Ok. If you want to think of it that way. Ok. So here's what we do. We take a key. We take it mod seven. And that's where we put the data. But we don't put the data in the table. Instead we put it in this various structure associated with the table. In this case, we are gonna use a linked list. So what is sixteen mod seven. Two. Alright. So sixteen goes here. And we are going to put it in the linked list. Tendered at cell two. Ok. Eight. How about eight? Where does eight go? Into the linked list. This is associated with cell one. Good. How about four? Ok. How about thirteen. I can do these easy. Any question about it? Ok. Twenty nine goes where? Where does twenty nine go? One. Good. Should I put it in the end or the front of the list? I wanna do this fast. So where should I put it? Front of list. Right. There's no reason not to put this thing at the front of the list. So forgive me for drawing it like this. Doing little bit of a. Doing a classroom hack here. Ok. How about eleven? Where does eleven go? Even I can take eleven mod seven. And twenty two. Oh brother. Alright any question about this? Make sense? Singly linked list. Alright. Do you like this? Why. What's bad about this? Feels like a doesn't it? I can handle your collision like collied. What could go wrong here? What could go wrong? 
 
