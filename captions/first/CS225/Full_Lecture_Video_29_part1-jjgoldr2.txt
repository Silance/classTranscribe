4-8 gig. Ok assume you can only use half of that for or a fourth of that for computation on any one given program. That's probably even an overestimate. Good morning! Heheh. And you realize that any data set that is larger than you know a couple gig, really merits some other storage OK. Um in yeah alright. So I'm not going to analyze driving records, that's kind of a fake application. Maybe it isnt. Not gonna look at this. The point is, is this. If you cant fit an entire AVL tree into this immediately accessable piece of memory, this RAM, this heap memory which is part of RAM, then your only alternative is to store it elsewhere. Now, I'm gonna talk about this someplace else, as if it is a hard drive. But, all of the conversation applies anyway. So here's where we were last time. We observed that if we have some balanced, and this one wasn't balanced, which we think is a reasonable way of accessing our data, but our data isnt close to us. That balanced structure doesnt fit in memory that is fast, then if we're going to do this sort of search for 38, 38 may be out in someplace where the communication cost is high. Whether a disk or the cloud or whatever. Ok. Now, the other piece, [tangent about pen stylus], all of this sort of remote data is that you dont get just one piece of data at a time. You get a block of data. Ok so even if you're only looking for key 38 on the moon, when you go to the moon and you come back, you come back with a whole bunch of stuff. It's just the unit of transfer that happens either via remote communication or with your hard drive or SSD. You want to make sure that that piece of data that you get is relevant to your search, application. And that's kind of where we were. So we're gonna define this structure called a b tree, and into the b tree, into a b tree node, not 1 key but a bunch of keys. So you can imagine that this whole thing is a b tree node. It corresponds to some linear function. Some fraction of a transfer block from your disk. Remote storage. [repeating]. [pause]. And the reason that I say it is some fraction, is because when you get the block you also need other information too. Just like when you get a BST node, you also get pointers to children. In this case you get your collection of keys with some other redirection. Some other information. Main goal. We want to minimize the number of reads from a disk or any other remote storage. Ok. Alright. I want to show you how these things work before we do a formal description. Hopefully show you by pushing on this link. It worked! Oh. Gnarly trees. That's new. What am I doing? Ok. Alright. This is my ok. that's not the one I want. I want that person, but I want the big ok. We just hope it exists at this point. 