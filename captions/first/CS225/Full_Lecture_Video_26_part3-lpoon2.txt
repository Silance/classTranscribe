Can you see that see well enough? is it clear what that tree looks like? What is the height? the new tree has height 3. The other one has height 4. What is the difference between these data of the trees? They are the same. How can we make it happen? I will guide you through this process. To begin with, this pointer is known as x, so root right = left, so croot->right = x, other way around. x is croot->right. We would use croot->right to do this, if we change the value of the tree, but for now, I would refer this to x, because it is clearer. So is x the same as croot->right. I am going to assign a value to something called y. Here is what y is going to be, y is going to be this. y is going to get the value of x.->right. Here is the prompt, I haven now picked up effectively the value of the pointer, why is holding on to 90, I have held on to what x -> right was, which was x ->right is free to be reassign, so what should it be in the new picture. x -> right should be y->right? I am talking about the pointer in 80, what is that one point to? it should be y's left, so x-> right should be y->left. OK? now we have picked up y->left, we have done this, so that means this little box, 90-> left is free to be reassign. So what should 90->left be ? y->left should be x. So we have fixed this pointer in the right place. This one didn't require adjusting. Except that we need the root to be in the right place. We need x to point to what? what is holding on to what we want. x should become y. So when you do a 2 characters swap, you do this kind of thing, a get t, a gets b, b gets t. We just did the same thing but with 4 things. This is called the tree rotation. 