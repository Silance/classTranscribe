Hash function. So that why it's an interesting problem even now. Ok. yeah. so the entire key space. So the question is what the difference between the entire key space and the sample key space. let's take phone models. cause nobody has a camera anymore. let's take phone model. so most phone model are expressed some numbers and some letters associate with them and some title so that's a key and you can have hundred of those. If I were making an application about phone. I might only draw samples of five of them from that entire keyspace . so the key space is what generally describes the possible set of keys and the sample that you choose is the data that happen to appear at your door step asking to be stored. your hash function still has to work on different data. ok I want to show you how easy it is to have bad hash function. what book is this from? This is from huck-finn. It's actually might be from tom sawyer I don't know for sure. I don't remember what this is from. so here this is what I want to start with this. It turns out that it's easy to hash string if they only have 8 characters. You can come up with a bijecture of string to a reasonable size table. I don't want to hash 8 character string. What I want to do is to take a 40-character string and hash it and store the page number. so that I can type a bit of text of tom sawyer and my application would go and said that on page bla. so this is what I came up with. Hashing scheme for long strings. So what we want is a hashing scheme or hash function for longer string. Here this what we are gonna do. We are going to take 40-character string and select 8 positions from it and use that as the 8-character string and use the good hash function of 8-character to take care of it. Let's choose 8 positions and I'm going to this kind of quickly and not carefully. that one and that one and that one and that one 5 6 7 8. ok? Forgive the wavy line there.