...Hash function. Okay so that's why it's an interesting problem, even now. Okay, yeah? So the entire keyspace, so the question is what's the difference between the entire keyspace and a sample from the keyspace? So the keyspace, for example let's take an application, let's take camera model, oh let's take phone models because nobody has a camera anymore apparently. Let's take phone models, okay? So most phone models are expressed as, you know, they've got some numbers, and some letters associated with them and then maybe a title. Right? Okay so that is a key, and you can have a whole bunch of different ones of those, probably hundreds, right? But if I were making an application about phones, I might only draw a sample of five of them from that entire keyspace, does that make sense? So the keyspace is what generally describes the possible set of keys and the sample that you happen to choose is the data that you have, happened to appear at your doorstep asking to be stored. Okay? Does that help? Right, and you would get different data the next time, but your hash function still has to work on it if your application should handle phones. Right? For example. Okay, any other questions about this. So I'm glad you asked that because I want that to be clear. Okay I want to show you how easy it is to have bad hash functions. What book is this from? Yeah so this is from Huck Finn. I once had a stu...okay I'll tell you that anecdote in a minute, yes so it actually might be from Tom Sawyer, I don't know for sure. I don't remember what this is from. So here is where I want to start with this. So it turns out that it's easy to hash strings if they have only 8 characters. That you can come up with a very nice bijection of 8 character strings to a reasonable sized table. Okay? And I will leave that to you to go research if you want. Hashing 8 character strings, you'll find a lot of stuff. Now I don't wanna hash 8 character strings. What I want to be able to do is to take a 40 character string and hash it and store the page number, so that I can type a little bit of text from Tom Sawyer of Huckleberry Finn or whatever book this is, and my application would go, "Oh, that's on page blah". Okay? And that's my goal. 40 characters instead of 8. Any questions about that? So here's what I came up with for a hashing scheme for long strings. So what we want is a hashing scheme or a hash function for longer stings. Here's what we're gonna do. We're gonna take our 40 character string and select 8 positions from it, and use that as our 8 character string and let the good hash function that we know exists for 8 character strings take care of that. Sounds kinda reasonable right? So let's choose 8 positions. And I'm gonna do this kinda quickly and not very carefully. That one, and that one, and that one, and that one, five, six, seven, eight. Forgive the wavy lines there. 