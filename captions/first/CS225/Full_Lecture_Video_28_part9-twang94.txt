you go out and you get the part containing 51, and you bring it back. So there is this big trip that happens from your conceptual notion of the AVL tree to the disk. And this is very slow. And you bring the data back and the comparison is quick, and we say okay we need this. And again you know you go out and you get this ... Then you say you need this and you go out, and you get it from another spot on your disk, and finally you go out and you get, on yeah 66! That's a long time. Okay, so this is bad. Shallow trees are basically imperative, because they minimizes the number of trips that you have to take to the disk. Okay?
Here is the other thing. Here is the secret. Here is the secret I didn't tell you. Back when I was over here, get in the key of the disk over here, I didn't just pick up one key. What's transfer back is actually a block of data, the whole block of data. That's the bandwidth of the interaction with your disk. Now it would be great if a lot of searching could happen in all of that. 
So we want a structure that has a shallow tree and takes advantage of relevant data in the nodes in a block. So in my picture what is really happening is you get a bunch of data from your disk, even if you are only interested in part of it. Any questions about that?
All right, I have something fun to show you. This is a B tree. So I have read a little bit, and I don't know what B tree stands for. But the speculation is that it stands for a block, because this is a one node B tree. Okay, now in fact of the root of 1, it corresponds to a entire block of data brought back. Usually they have like a thousand keys and we have only 8 keys, and we'll describe what m is in a just a minute. So what do you notice about this piece of data? They are in order, that's right. This is a node of B tree, so a node of a B tree is essentially a vector or an array of ordered keys.
And these are the principles. Build a tree that uses 1 disk block per node, nodes will have more than 1 key and tree should be balanced and shallow. We'll start next time looking at illustration of these things because they are really quite cool.