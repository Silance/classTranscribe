we still havent found the right spot
found the right spot
 but
this is null when this guy is null all we have to do is
 make a new node and return
we make a new node and return to the black calling box
the function corresponding to the black triangle
where this blue one is the root
we are going to do these steps
is it out of balance
in the black triangle
is there an imbalance
no okay
we do not need to rotate
 this should be indented
does its height need to be updated
yes so we update its height so now the height of that guy is one
ill just put it in there
now we have computed 
we have accurate height height of subtrees
pass back to green calling function recursion at green level
and we follow those stpes
is there an imbalance
no so no rotation necesarry
do we have a new height?
how do we compute new height
its the maximum of those two plus 1
that becomes 2
fine
pass control back is there an imbalance here
no so no rotation
we should update height
is there new height yes this becomes three
one two three
 its a comparison of height of subtrees
pass control to the blue
pass control to the blue
and what do the steps say
check for imbalance
it is out of balance and where have we done the insertion
it is out of balance and where have we done the insertion
in the left right subtree so what we have here is
this
so we think a double rotation a left right will fix
and then we update the height
it may not need a new height
i think its height will be three after that rotation and then we pass control back and the heights are updated again
any questions
i dont want to do the rotation here
the point is that we can do these things after we insert the node in its correct place
lets look at some code
yuck
too much code for one function
so lets take a tiny piece of it and examine that
in fact you know what
describe what is going on in this code
you can even start with the function signature
sure
in fact you can probably fill in the blanks
if you look at this code you can fill in the blanks
and i should point out that there is no right right and left left rotations
