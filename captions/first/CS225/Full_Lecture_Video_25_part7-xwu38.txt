Now you are allowed to tell me the plus or minus one done. Two to the H plus one minus one 
should I believe them? And that's for H greater than or equal to negative one. Oh yeah look at that, it works. Should I believe them? No we should not believe them. How do we approve it? yes this is like day one induction. These right here this is day one induction. super easy infact I'm gonna call it back of the envelope induction. I've already eyeballed it to check to see if the base case works. Did you see what I did? I eyeballed the base case by plugging in 
H-1 H equal negative one here. Eyeballed check did it break? No, two to the zero minus one is zero and h is zero ok? Now, what is my back to the envelope super quick evaluation of the recurrence, the recursive case? M of H equals one plus two plus to what goes in that box? 
two to the H minus one plus one minus one. All in parenthesis what we do here? We applied the inductive hypothesis but I did not write it down and that is ok. Do not tell Magrette . So what went on there the inductive hypothesis was applied. Ok? Any question about it? Is that Ok? Raise your hand if ... no that's not nice... tell the person sitting next to you if that is not ok, and I won't watch. That freaks you out a little bit. I'm assuming that you can be kind to your friend. Have a minute of discussion please. Ok not ok I can't believe we're doing this. Feels revolutionary but it is ok. Magrette is still watching. Oh my gosh I just asked for class transcription, too. Ok, so alright any questions about it? I won't actually get post the class. This is how ... induction...   sometimes when it is not straight forward. ok any question about it? and it all works out right. You do the math and it all works out oh look I did all that arithmetic in my head. Are not you impressed? kidding. Ok, but we are not done, here is what we know. When know that I'm gonna say this in English and write it in math. We know that the number of nodes of any tree if hight h is less than or equal to, is no more than two to the h minus one...is greater than ohh it is ok but that does not say anything about our algorithm. That is not what we wanna say, h represents our algorithm, the running time of our algorithm, so all we have to do is inverse this function. Ok? I'll raise you... so it looks like this one goes to n  plus one, oh I better take the log of that. So that and then subtract one from the whole thing and we have h is greater than or equal to log of n plus one minus the constant here. Now how do we say this using the discrete we know? We say that h is big O omega of log of n, ok? we have all the piece, h is at least some constant factor of log n, right? two of them.