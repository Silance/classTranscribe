It's two to the h plus one. I can do this really fast. Minus one. Minus eight. Alright. Any question about it? It is the easiest the indeption you need to do. It is easy recurrsion. Somebody magically gave you the answer. Just to prove it is true. But, we don't want this thing in turns of h, we want this thing in turns of n. So what we know is that the height is O(log(n)). So I know the s of h which is the sum of the path length is equal to two to the h+1-2-h, but I also know that h is at most some constant times log(n) there. So this thing is at most two to the c*log(n)+1 minus one minus c*log(n). If you do all the math O(n), the only failure piece is this first term. Here is what I wanted to do. I made a heap and now I want to use that heap. So I started of with data that was in no particular order. I started of with data that was in no particular order. And then I build up a heap out of it. I want to use that heap to finishing sorting of that data that was in no particular order from which I built a heap. How may I do that? I wanna sort using this thing. How do I get sorted data from the heap. I think the biggest hint I have is selection sort if you remember selection sort. How can I make a sorted array if I got a heap?
 