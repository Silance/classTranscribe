hash function. ok? So, umm, that's why it is an interesting problem even now. Ok, yeah? So the entire keySpace so the question is what's the difference between keyspace and a sample from keyspace, OK? So, the umm, the keyspace, for example, let's take an application, ok? Let's take camera model.  Old models,ok? Cause nobody has camera anymore, apparently.
Umm, let's take phone models. OK? So, most phone models are expressed as, you know they got kind of some numbers, some letters associated with them and then maybe a title. Right? Ok, so that is the key. And you can have a whole bunch of different one of those, probably hundreds, right? But, if I were keeping, if I were making an application about phones, I might only draw a sample of five of them, from that entire keyspace. Does that make sense? So, the keyspace is what generally described the possible set of keys, and the sample you happen to choose is the data that you have happened to appears at your doorstep asking to be stored. OK,does that help? Right, and you would get different data the next time, but your hash function still has to work on it if your application should handle phones, right for example? Ok, any other questions about this? I'm glad you ask that, because, I want that to be clear. Ok, I wanna show you how easy it is to have bad hash functions. What book is this from? Yes, it is from HUCK FINN. Umm, I once have a student, ok, I'll tell you that in a minute. So, it actually might be from Tom Soya I don't know for sure. I don't remember. I don't remember what this is from, umm. So here's where I wanna start with this. So, it turns out that it's easy to hash strings, umm, if they have only 8 characters that you can come up with the very nice bijection of 8 character strings to a reasonable size table. OK? and I will umm, I'll leave that to you know you to go research if you want. Hashing a character strings you'll find lot of stuff. Now, I don't wanna hash a character string. What I want to be able to do is to take a forty character string, a forty character string, and hash it, and store the page number. So that I can type a little bit of text from Tom Soya or Huckleberry Finn whatever book this is. And my application would go, oh, that's on page blah, ok?  And that's my goal, forty characters instead of 8, any questions about that? So here's what I came up with for a hashing string or a hashing scheme for long strings. ok? So, what we want is a hashing scheme or a hash function for longer strings. OK? Here's what we gonna do. We're gonna take our forty character string and select 8 positions from it. And use that as our 8 character string and let the good hash function that we know exist for 8 character strings, take care of that. Ok, sounds kind of reasonable, right? So, let's choose 8, umm, let's choose 8 positions. And I'm gonna do this kind of quickly and not very carefully, ok? I'm choosing 8 random positions, that one, that one and that one, that one. Five, six, seven, eight. OK? Forgive the wavy lines there.