Any question about that? ok.. None? It's really quite here. We should play music or something. Do you know who Lawrence Angrave is? Do you know who he is? He is the instructor for 241. This morning, he sat in my office he wrote a herd of blank space for his students. I am like "you're a genius." That's the teacher of the year right there. Alright! So what's the running time? Where did that come up? Blank space! It's a blank space. That was where it was That's where it came from. Yeah, that was a blank space right there. What's the running time of this function depend on? What's the running time depend on? Yeah? No! Not the size of it. Kind of. Depends what you mean by size. Depends what you mean by size. Yeah? The height! That's right. You are gonna walk up this tree right? So the number of steps. The number of effectively iterative calls to find depends on the heights of the tree. In the worst case, I agree with you that the worst case you could just have a chain right? Chain kinda like the one on the right there. And you can come up with the way set up union that creates that the worst case thing. So uh... This would be big-o of n. But that's not particularly interesting. What I wanna know is what is the very best tree look like? What the ideal tree? What do we wish these trees look like? Binary tree? No we can do better. We can do better than AVL trees. Yeah? Very good. These are not necessarily binary trees. We can have a root. Let's say, four. Okay? Should be thirteen for talking about Taylor Swift. Cause that's her favorite number you know. Why? You didn't know that? I can do some real demage to my U of I freshmen right guys? Issac knows that thirteen is Taylor Swift's favorite number. Yeah? Yeah I did. That's right. Alright this is an ideal tree. I have her on my brain today. I should shake her off. Alright let's take a union. Let's take a union here. All we have to do. Look it. We got the roots of two trees. All we have to say is s root of one , one of the roots has to have a parent who is equal to the other. Now, as I said, this is arbitrary choice of this point. There's nothing wrong for me to write sown there. I think what I did was always this. The first one points to the second. So I think it is that I said the parent of root one becomes root two. Is that right? Alright, What's the running time of this function. It's constant time! That's right. It's just an assignment. It's a just changeable value here. So this is that. Alright, that's pretty good. So what we wanna do is aim toward this because then our finds are fast. What we have now is a case where we can create you know given our current code, unfortunately things can't look like this. So get a little smarter. Now, I have a question in that example. In this example, should I do what would be smarter? Should I do this? or should do this? Which one?