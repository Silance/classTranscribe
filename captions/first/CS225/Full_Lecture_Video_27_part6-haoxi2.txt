We still haven't found the right spot, right?
Still haven't quite found the right spot
But this is null. when this guy is NULL, all we have to do is to make a new node, and return
So we make a new node, and return to the black calling box, 
the function corresponding the black triangle, where this blue one is the root
now we gonna do these steps
Is it out of balance? 
In the black box, in the black triangle
Is there inbalance? 
No, ok
So we don't need to rotate, this should be indented, probably 
And now, does it height need to be updated? 
Yes, so we update its height, right
So now, the height of that guy is 1 
I will just put it in there, why not
And now we have computed execution, we have accurate heights of subtrees, and now we pass control back to the green calling function, the recursion at the green level  
And we follow the steps, is there inbalance? 
No, so no rotation is necessary 
Do we have a new height? 
How do we compute the new height? 
It's the maximum of those two plus 1 right? 
So that becomes 2 
There is a 2 written in there, I will just go with it  
Alright, fine, and then we pass control back. Is there inbalance here?  
No, so no rotation is necessary, but we should update the height.
Is there a new height? 
Yes, this one becomes 3, right? One, two, three 
And again its just a comparison of heights in subnodes, subtrees 
Alright, and then we pass control back to the blue 
Pass control back to the blue
And does the steps say? Check for inbalance. Is it out of balance? 
Yes, ok 
It's out of balance, and where have we done the insertion? 
It's out of balance, and where have we done the insertion? 
In the last right subtree. 
So what we have here is this right? 
So we think double rotation, a left-right rotation will fix 
And then we update the height, it may not need a new height, but I think the height will be 3 after the rotation  
And then we pass control back 
Ok then the heights are updated again
Any question about that? 
I can't really, I can't really make a mess of doing the rotation here, it's not the point 
The point is that we can do these things after we insert the node in its correct place  
Ok, let's look at some code 
YUK, YUK, this is way too much code for any one function  
Ok, it's way too complex 
So let's just take a little teeny tiny piece of it and examine that  
And in fact, you know what, I'd like you to look at it with your neighbour and just sort of describe with each other what is going on in this code  
You can even start with the whole function signature if you like   
In fact you can probably fill in the blanks, if you look at this code you can probably fill in the blanks  
And I should point out that there is no right-right and left-left rotation 
