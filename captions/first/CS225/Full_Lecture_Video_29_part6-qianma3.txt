Okey. Got it? What we didn't see is 16 not 20. If you remove 20, the in order predecessor will come up, but then that one is too small, so I'm thinking: grab... Should we do it? ok, there's a lot of throwing things down. This one is quite combative row down. Okay, right can we go on? Who said please? I love that you feel comfortable enough to admit that you said please. So here is a more formal description of the constraints of the nodes of some key part. So the internal node is the non leaf node, internal means non-leaf. Note that the number of keys in that node is the number of children minus 1. And a b-tree of order m is a m way tree. so maximum m way. so you might have m children. All leaves hold no more than (m-1) keys. That's why throwing up happened. But the thing we didn't see very much is this piece right here says that no node is very empty. so if this is as big a node can be, notice that that says it's at least 1 minus less than half full. So you can think of these nodes as at least half full, it might be 1 less than that but that's all. So the key observation is no node is very empty. except the root because we need some place to keep this structure. So let's reinforce that. This always confuses me too i don't know why. so it says here that the root can have between 2 and m children. How many children does this have? one, two! Even though it has one key. Oh yeah there is this minus 1 thing. Okay! Any questions? of course I have question for you. I want you to infer from this picture the order of this tree. no it's not four, has to be bigger than four why? yea? because this one has four keys in it. if four is the order of this tree we would have no more than three. five? why not six? this is actually a hard question. why not six?