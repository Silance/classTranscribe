Good,right ,two is bigger than the square root of two.OK, so, it holds. N (1), I should be doing like this. N (0) equals 1, the expression gives 2^(0/2) and N(0) is greater or equal to 2^(0/2). OK, what if h is greater than 1?Then ,by inductive hypothesis that says I am going to write this down explicitly but there is not a lot of fault behind it. OK,I'll write it down in sort of an automatonic way, a robodic way, it simply says for any value less than h, an AVL tree of height j has at least 2^(j/2) nodes. OK, so it is a restatement of the theory, its a restatement of the theory but if this less than or equal to here that's important. This says the result holds for smaller trees. the result holds hold for smaller trees, OK?  All right, so now, and since we do know, we have already argued that N(h) is at least 2 * N(h-2), what do we know about this? Yeah, look, is h-2 smaller that h? Yeah, in this algebra it is, so we can apply the inductive hypothesis. Yes,OK, it is a valid j, it's a valid j! So, we can replace it, because this is the lowest value for an AVL tree of height h-2, n is that value.So we know that this is at least 2 * 2^((h-2)/2 ). Oh, boy, I hope this arithmetic works. We know that N(h) is at least , did you do it, did you do the arithmetic? Factor of 2 here and -2 over 2 is -1 , so those cancelled. We end up with 2^(h/2),OK, yeah! That was for h greater than or equal to 0. OK, FINE! GOOD! What's the punchline, that's does not seems very compelling. Now we turn it around. OK, so we have this result that says n, the true number of node, is at least 2^(h/2), for when h is greater or equal to 0. That's our result. But now all we have to do is invert it, right? And so let's see, I'd better take log of both sides. log(n) is at least of h/2 and I'll rewrite this, multiple both side by 2 and look we have, we have h is less than or equal to a constant time of log(n). Cool! And what is this function, what is function when h=0? oh, I'm sorry , what is this when h is equal to 0? Is n greater than or equal to 1, this to me looks whole life of here is f, here is c, here is j, here is k, looks a lot like the definition of big O. so what can include that for AVL trees worst case the height is big O of log(n). It makes this happy. OK any question about it?