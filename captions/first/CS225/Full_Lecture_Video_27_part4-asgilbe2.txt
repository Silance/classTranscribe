Ok, it's exactly equivalent and that was how I originally wrote this code.  Well, this code snob came to me and said "Why don't you write with balances consistently? If your gonna be checking balances, check balances.  Don't like switch over to evaluating keys".  I'm like alright well lets do that.  So, we could have...well it does make prettier code, it does...we could have used this to judge.  We could have used key that we're inserting is greater tright's key.  Could have used that to evaluate what kind of switch we need.  But, there is this argument about the height balance as well and i'm gonna try yet again to make this argument, ok? Alright, so we know that we're doing an insertion here and we know that we have a new imbalance up there which means that we must have changed the height of this whole tree.  Cause it didn't used to be out of balance and now it is.  So the height of all of this changes as a result of an insert down here. Ok so the height of the whole thing changes as a result of an insert down here.  Now, what I wanna ask about is what's the height balance then have to be here. Now, I have a question for you.  Could this be two?  Could the height balance here after inserting down here be two?  No, why?  If it were, we would be doing our rotations here instead of here.  So this one is not out of balance.  There's no imbalance here.  Ok cause it's up higher in the tree.  We're gonna fix things when we find them, we haven't found them yet.  Ok, so that means the balance factor at tright cannot be 2 or -2.  Ok so those are removed from consideration.  Ok do you se-- you can see them just striking through there and it is not working. [Pause] I quit [Longer Pause]. Huh that's funny. Ok, alright fine.  So now after the insert, suppose the balance factor here is negative one.  Ok so suppose the balance factor here is negative one after the insert. Ok? But it's two up there.  What does that mean about how big this was before the insert? Ok we've inserted over here, we've changed the height of this whole tree. Right? We've changed the height of that whole tree.  Cause otherwise we wouldn't be reevaluating things.  But this one is negati-, I mean thi-.  This one is taller after the insert.  So that's actually a contradiction, right?  This one is taller after the insert over here.  That can't be, right, the only tree in which we're increasing height is had to be where we did the insert. Ok so, it can't be -1.  This balance factor cannot be -1.  Ok, so now it's either 0 or 1 here. Now, suppose it's 0. Ok so that's gone. Here look there's a 1 right here.  So suppose the balance factor is 0, ok? Now and we just did an insertion over here.  Now if we do an insertion over here it means -and we're growing the height of this whole tree- it means that we're effectively bringing the height of this one to be the same as the height of this one.  So again it's a contradiction.  Right? It's a contradiction.  You can't increase the height of this whole tree while at the same time bringing this one up to the height of this one.  Which results in the 0 balance factor.  So the only balance factor that can exist here is 1.