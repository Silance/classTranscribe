
Yeah, alright. So, uh, it turns out you cannot avoid collisions, you just can't. They are going to happen and the question is how do you handle them. The results you see here are classic approaches to handling collisions, you will have better ideas but everybody in your world expects you to know these ideas. Okay, everybody in your world is going to expect you to know these. And, in fact, all your better ideas are going to be, almost all your ideas are likely to be modifications in some sense of these. So the first one that we are going to talk about is separate chaining. So that's the vocabulary associated with it. There's additional vocabulary, it is known as an open hashing strategy. Now the reason for that is that we are not going to put all of our data in the table. Okay? Instead we are going to use the table to gain access to the collection of our data. Alright, so here's what this looks like. Here's our particular set. Here's our set of data. we are going to say in general that the set of data is size n, the size the set of data is in and our hash function is easy in this case, its just k % table size. It's the key % table size. Now if you want to you can imagine that our key space is actually more interesting and we've applied some other hash function to get down to these integers and now all we are doing is making it fit in the table. If you want, if you want to think of it that way. Okay, here's what we do, we take a key, we take it mod seven and that's where we put the data. But we don't put the data in the table. Instead we put it in this auxiliary structure associated with the table and in this case we will use a linked list. So, what is sixteen mod seven? Two. Okay so sixteen goes here and we are going to put in a linked list. Tethered at cell two. How about eight? where does eight go? Into the linked list associated with cell one, good. How about four? Okay, how about thirteen? I can do these easy, okay. Any question about it? You good? okay 29 goes where? Where does 29 go? One, good. Should I put it at the end or the front of the list? I want to do this fast, so where should I put it? the front of the list, right. There is no reason to not put that thing at the front of the list so forgive me for drawing it like this, I'm doing a little bit of uh, oops, I'm doing a classroom hack here. Okay, how about eleven? Where does eleven go? You and I can take eleven mod seven. Okay, and 22? Oh brother. Alright, any question about this? Make sense? Stick them in a linked list. Alright...do you like this? Why? what's bad about it? It feels like a cop out, doesn't it? [gibberish] handle your collisions i'll let you collide. What could go wrong here? what could go wrong? yeah? 