Yep....Yep...Alright. Any other questions about this? Do you wanna do another example? [Student asking a question] No, not necessarily, a great question. So the question is: do the values inside here, do these values represents the height? They happen to represent the height in this particular example. You can't count on that usually. Actually they don't quite represent the height. They are identifiers. So if these were students' names, these would be students' name except for this one, these would all be roots. So this says my parent is identifier one, 1's parent is a root. It has no parent. Does that help? So the N-trees are identifiers. [asking] No, there will be nothing to do. cause they are already in the same set. ...yes, that's right. Because you only can take a union of two different sets. You might end up creating a loop...I don't know. A union of a pair of things will still just be that. A union of two same things will still be that thing. Just like sets. OK. Any other examples you wanna to look at here before we go to a bigger one? OK, so let's clarify this and do it in a little bit larger context. We are going back to the games. But notice again there're no games. There's no indication of who likes which game. There's no angry birds appearing anywhere in the description. You have to keep that separate. If you're describing meaning to your sets, you have to keep that separate. In fact, when we use this structure which will happen in MP7 when we use this structure, there's actually no meaning to the sets. They're all sort of status. Alright, let's draw a diagram. I've created the structure in memory that denotes these sets. So this is what memory looks like. But I want to draw the up trees, the pictures of up trees that correspond to this memory. What does it look like in the array. So 0's parent is 4. 4's parent is nobody. So I've got 0, 4 done. 8's parent is 4. And 1's parent is 8. And I just started with that one because 0 came first. 2's parent is 5 and 5 is a root. So I'll go ahead and do that part next. And 9's parent is 5. 7 is a root. 3's parent is 6, which is a root. So now, what do I get back when I do a find of 4. If I do a find 4. You go to 4 and you walk up. But there's no place to walk, so what do you return? 4. Find of 8 returns... OK we go to 4, 4 is a root. So this returns 4. So this is true. Now this one gets interesting, how do we take the union. Well, first of all, how do we evaluate this, what's the find of 7? 7. What's the find of 2? 5. Are they the same? No. So we should take the union of those, which in this case is to take this 7 and point it to 5. Or this 7 is going to become 5. Yea? [asking] No, it doesn't point to 2.You always do the adjustment at the roots. So raise your hand if this surprises you a little bit. Cause this is an itinerary tree not a binary tree. Alright. Ahhhhhh