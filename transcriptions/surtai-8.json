[{"start":"0:00","end":"0:02","text":"So this video is about how to have an argument"},{"start":"0:02","end":"0:07","text":"let's have a look inside some directories that we've got on our system"},{"start":"0:07","end":"0:10","text":"so if I type ls /bin"},{"start":"0:10","end":"0:14","text":"you'll see here's a whole lot of programs that I can run from my terminal window"},{"start":"0:14","end":"0:17","text":"and some of them you might recognize already"},{"start":"0:17","end":"0:21","text":"including ls for list the contents of a directory (what we just did)"},{"start":"0:21","end":"0:23","text":"cat to list the contents of a file and print it out"},{"start":"0:23","end":"0:28","text":"echo simply to echo back whatever we type"},{"start":"0:28","end":"0:32","text":"I can say echo Hello World"},{"start":"0:32","end":"0:36","text":"and we also can used echo to print out the result of the exit value of the last program run"},{"start":"0:36","end":"0:43","text":"how is it that these programs then can find out the parameters (the arguments) that we supply?"},{"start":"0:43","end":"0:46","text":"when they are run?"},{"start":"0:46","end":"0:51","text":"and the answer is that actually our main method can have two parameters"},{"start":"0:51","end":"0:58","text":"an integer (the number of arguments) and also an array of character pointers"},{"start":"0:58","end":"1:02","text":"called argv for value"},{"start":"1:02","end":"1:06","text":"let's actually print out some of these things"},{"start":"1:06","end":"1:15","text":"printf argv, the very first entry, the zero-th index is this"},{"start":"1:15","end":"1:18","text":"argv of zero"},{"start":"1:18","end":"1:25","text":"and we will also print out what the last thing points to"},{"start":"1:25","end":"1:28","text":"so that's going to be argc"},{"start":"1:28","end":"1:31","text":"so that's %p"},{"start":"1:31","end":"1:30","text":"we'll have a new line or two"},{"start":"1:30","end":"1:35","text":"alright, and change that argc"},{"start":"1:35","end":"1:40","text":"here's two surprising things"},{"start":"1:40","end":"1:45","text":"first of all, the very first entry is actually the execution name of the program"},{"start":"1:45","end":"1:47","text":"how we started the program"},{"start":"1:47","end":"1:49","text":"here, our program is just called \"program\""},{"start":"1:49","end":"1:58","text":"and secondly, there is actually one extra argument at the end and that points to the null string"},{"start":"1:58","end":"2:01","text":"our pointer is null, it's zero"},{"start":"2:01","end":"2:09","text":"so, let's now print out the other values"},{"start":"2:09","end":"2:18","text":"we'll find out what the other values for argv is"},{"start":"2:18","end":"2:21","text":"and we'll loop through and we'll print out all of those values"},{"start":"2:21","end":"2:24","text":"so I'll have an integer count. I'll start from 1 this time."},{"start":"2:24","end":"2:30","text":"because we don't want to print out the program name"},{"start":"2:30","end":"2:38","text":"I can say: while count is less than argc, because I don't need the null pointer at the end"},{"start":"2:38","end":"2:41","text":"and each time around the loop, increment count"},{"start":"2:41","end":"2:50","text":"I'll print out the value of my count that's %d and print out its value as a string"},{"start":"2:50","end":"2:57","text":"ok so that's going to be count and argv at index of count"},{"start":"2:57","end":"3:00","text":"finally, let's put a new line in here"},{"start":"3:00","end":"3:05","text":"here's my mistake: I should have said argc here for count"},{"start":"3:05","end":"3:09","text":"ok, let's print it out"},{"start":"3:09","end":"3:15","text":"when we start, argc is just 1. we've got just the program"},{"start":"3:15","end":"3:19","text":"run it again but this time but this time have \"cat hat sat\""},{"start":"3:19","end":"3:23","text":"and you'll see I've got three additional arguments"},{"start":"3:23","end":"3:30","text":"if I had put that inside double quotes then the hat and sat would be one argument"},{"start":"3:30","end":"3:34","text":"so you see that we can now send our arguments"},{"start":"3:34","end":"3:39","text":"for example, I could write a local program that helps me add up some numbers"},{"start":"3:39","end":"3:46","text":"I need a simple way to turn a string of digits into an integer"},{"start":"3:46","end":"3:51","text":"in other words, I want to go from ASCII to an integer"},{"start":"3:51","end":"3:54","text":"so this is the simplest way of turning a string into an integer number"},{"start":"3:54","end":"3:59","text":"but this function doesn't give us much integer checking"},{"start":"3:59","end":"3:57","text":"if it can't read it, it simply returns zero"},{"start":"3:57","end":"4:04","text":"I'll talk about how we can do a better job using scanf in a different lecture"},{"start":"4:04","end":"4:07","text":"so we'll add those up and we'll print the result"},{"start":"4:07","end":"4:11","text":"so, we've got a result of zero"},{"start":"4:11","end":"4:15","text":"let's try running our program again with 10 20 30"},{"start":"4:15","end":"4:21","text":"and you'll see we get a result of 60"},{"start":"4:21","end":"4:30","text":"if I had put some non-numbers in here, I get the result ten because the string I've got here it's converted into a zero"},{"start":"4:30","end":"4:34","text":"alright, that's enough from me. now it's time for you to play. bye!"}]