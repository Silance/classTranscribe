[{"start":"0:00","end":"0:01","text":"hello welcome"},{"start":"0:01","end":"0:03","text":"let's talk about getline"},{"start":"0:03","end":"0:10","text":"so it's very common to read in a single line of text either from the user or from a file"},{"start":"0:10","end":"0:17","text":"and we would like it to be very easy to say hey let's not worry about making sure my buffer is large enough"},{"start":"0:17","end":"0:20","text":"i just want to get the whole line"},{"start":"0:20","end":"0:21","text":"and this getline was born"},{"start":"0:21","end":"0:24","text":"this is being adopted into the posix standard"},{"start":"0:24","end":"0:31","text":"if you are working however with an old standard and an older compiler we have to ask gcc to explicitly enable it"},{"start":"0:31","end":"0:40","text":"so before doing our includes with stdio we need to define _GNU_SOURCE"},{"start":"0:40","end":"0:48","text":"so if we do that we would like the gnu source additions to the standard functions"},{"start":"0:48","end":"0:54","text":"right so if we do that now we have got a getline declaration included as part of the #include <stdio.h>"},{"start":"0:54","end":"0:58","text":"so here is how we can use getline"},{"start":"0:58","end":"1:03","text":"with getline we actually set up two variables"},{"start":"1:03","end":"1:07","text":"we get getline to manipulate these directly "},{"start":"1:07","end":"1:12","text":"we are going to have a pointer to a buffer"},{"start":"1:12","end":"1:18","text":"and a little int to say how big is our buffer"},{"start":"1:18","end":"1:24","text":"well let's just check to see really if it is an int or if we should be doing a different type"},{"start":"1:24","end":"1:30","text":"so let me pull up my favorite manpage for getline"},{"start":"1:30","end":"1:34","text":"so actually the correct type to use is size_t"},{"start":"1:34","end":"1:40","text":"which is essentially an unsigned int or larger on some systems"},{"start":"1:40","end":"1:39","text":"so let's just make a note of that"},{"start":"1:39","end":"1:44","text":"that is the declaration that we are going to be using"},{"start":"1:44","end":"1:49","text":"and so we will have not just a buffer to our character array"},{"start":"1:49","end":"1:53","text":"but also size as well to say how big is our buffer"},{"start":"1:53","end":"1:56","text":"and i will call this say capacity"},{"start":"1:56","end":"2:00","text":"right so we could start calling this and we could say okay"},{"start":"2:00","end":"2:07","text":"get me a line and oh i need to pass in a pointer to my buffer variable"},{"start":"2:07","end":"2:13","text":"right and notice that the declaration here is star star asteric so it's a pointer to a pointer"},{"start":"2:13","end":"2:17","text":"right so how did i get that"},{"start":"2:17","end":"2:21","text":"i say okay give me the address of my variable"},{"start":"2:21","end":"2:23","text":"and similarly for the capacity as well"},{"start":"2:23","end":"2:26","text":"the size of the variable"},{"start":"2:26","end":"2:29","text":"so give me the address of my capacity"},{"start":"2:29","end":"2:34","text":"and getline is going to modify those two variables directly"},{"start":"2:34","end":"2:37","text":"essentially if my buffer is not large enough"},{"start":"2:37","end":"2:44","text":"it is going to free up the old buffer and then call malloc so that we get a larger buffer"},{"start":"2:44","end":"2:49","text":"okay technically it might call realloc but let's not worry about exactly which library call it calls"},{"start":"2:49","end":"2:55","text":"we just know that it's going to do all that buffer maintenance for us automatically"},{"start":"2:55","end":"3:01","text":"and now we need to give it a filestream so why don't we use say stdin"},{"start":"3:01","end":"3:09","text":"so right now our code suffers from a terrible flaw which is that we've assumed that our automatic variables buffer capacity will be set to nothing"},{"start":"3:09","end":"3:15","text":"so the getline knows that it cannot use what it happens to be pointing to"},{"start":"3:15","end":"3:19","text":"so we actually need to set these to explicitly to null and the capacity to zero"},{"start":"3:19","end":"3:25","text":"so the first time we call getline getline will see that the buffer is certainly not large enough and will allocate enough space"},{"start":"3:25","end":"3:36","text":"we can now find out what the result is which is the number of characters getline has managed to retrieve"},{"start":"3:36","end":"3:38","text":"or a negative value if it failed"},{"start":"3:38","end":"3:40","text":"so let's make a note of that"},{"start":"3:40","end":"3:42","text":"and we'll print this out"},{"start":"3:42","end":"3:50","text":"so i'll print out an integer and let's have a look to see what we can find inside our buffer"},{"start":"3:50","end":"3:52","text":"so we want the result and we want the buffer"},{"start":"3:52","end":"3:56","text":"and lastly let's put a newline here"},{"start":"3:56","end":"3:59","text":"okay so we'll run our little program here"},{"start":"3:59","end":"4:04","text":"and now it's waiting for me to type something"},{"start":"4:04","end":"4:11","text":"okay great so it says i have got six characters"},{"start":"4:11","end":"4:14","text":"wait and i printed ABCDE"},{"start":"4:14","end":"4:19","text":"actually the last character might be a newline character"},{"start":"4:19","end":"4:20","text":"and quite often we don't actually need that"},{"start":"4:20","end":"4:26","text":"so why don't we overwrite the very last character with null with a terminating byte"},{"start":"4:26","end":"4:29","text":"so let's write the code for that"},{"start":"4:29","end":"4:34","text":"first of all we only want to do that if we get at least one character back from getline"},{"start":"4:34","end":"4:39","text":"so let's check that the result was positive"},{"start":"4:39","end":"4:44","text":"and also we only want to do this if we are going to overwrite the last character which truly is a newline"},{"start":"4:44","end":"4:52","text":"we could imagine for example reading from a file where the very last byte is not actually a newline"},{"start":"4:52","end":"4:54","text":"so we should just check to see what we're going to write here"},{"start":"4:54","end":"4:59","text":"so let's look inside our buffer and where do we want to look "},{"start":"4:59","end":"5:04","text":"well if we read one character than that would be at the beginning of the buffer"},{"start":"5:04","end":"5:07","text":"so we need to look at result minus one"},{"start":"5:07","end":"5:11","text":"so if that is equal to the character of a newline"},{"start":"5:11","end":"5:16","text":"then let's truncate the string"},{"start":"5:16","end":"5:20","text":"the easiest way to do that remember is strings are just terminated by zero"},{"start":"5:20","end":"5:23","text":"so let's just put a zero directly into that byte"},{"start":"5:23","end":"5:28","text":"so we are going to say at the same spot set that equal to zero"},{"start":"5:28","end":"5:31","text":"right so let's run our program again"},{"start":"5:31","end":"5:45","text":"okay so this time it read it correctly and our printf we didn't get that unwanted extra newline"},{"start":"5:45","end":"5:50","text":"alright our program right now is allocating memory on the heap"},{"start":"5:50","end":"5:52","text":"we don't do it we let getline do it"},{"start":"5:52","end":"5:57","text":"but it's actually up to us when we finish getline to free that buffer"},{"start":"5:57","end":"6:00","text":"right so let's do that"},{"start":"6:00","end":"6:03","text":"at the very end here we can call free on the buffer"},{"start":"6:03","end":"6:14","text":"we don't need to do that every time we call getline because getline by default will try to for performance try to reuse the buffer for each line it gets"},{"start":"6:14","end":"6:21","text":"so for example we could call getline twice and it would try to use the same buffer"},{"start":"6:21","end":"6:24","text":"but the big take home message is first of all"},{"start":"6:24","end":"6:32","text":"you are going to need a pointer to a buffer and a capacity buffer which getline itself is going to change the contents of"},{"start":"6:32","end":"6:37","text":"as you call it it can make the buffer as large as"},{"start":"6:37","end":"6:43","text":"each time you call getline it might change that buffer to point to some new memory if the buffer needs to be larger"},{"start":"6:43","end":"6:51","text":"secondly it's a great idea to check the return value of getline to see how many characters it managed to read"},{"start":"6:51","end":"6:54","text":"and also to see if there was an error or not"},{"start":"6:54","end":"7:01","text":"and the return type for that is ssize_t for a signed integer type"},{"start":"7:01","end":"7:10","text":"and finally it's good practice to don't forget to free the memory that is pointed at by your buffer variable"},{"start":"7:10","end":"7:10","text":"okay that's it for me"},{"start":"7:10","end":"7:10","text":"have fun playing"},{"start":"7:10","end":"7:10","text":"bye"}]