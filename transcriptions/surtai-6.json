[{"start":"0:00","end":"0:03","text":"Now let's talk about pointers and arrays"},{"start":"0:03","end":"0:07","text":"how might I make an array of integers?"},{"start":"0:07","end":"0:10","text":"let's say I had some data and I did this"},{"start":"0:10","end":"0:16","text":"well, on this particular architecture we just found out that an integer is 4 bytes"},{"start":"0:16","end":"0:19","text":"so I've now got thirty two bytes of storage"},{"start":"0:19","end":"0:21","text":"and in fact, it's going to be thirty two bytes on the stack"},{"start":"0:21","end":"0:23","text":"so what do I have here?"},{"start":"0:23","end":"0:30","text":"when I say data square brackets 8, I'm going to get back 4 times 8, 32 bytes all together"},{"start":"0:30","end":"0:32","text":"all contiguous in memory"},{"start":"0:32","end":"0:36","text":"and in fact, data is going to point to  the very first 4 bytes"},{"start":"0:36","end":"0:39","text":"so I've got 4 bytes and then 4 bytes and then 4 bytes and then 4 bytes and so on"},{"start":"0:39","end":"0:43","text":"let's have a look at that"},{"start":"0:43","end":"0:55","text":"so, if I say printf data is at and this time do %p, that means treat data as an address"},{"start":"0:55","end":"0:58","text":"so we'll print this out"},{"start":"0:58","end":"1:07","text":"and we see we've got a value here in memory"},{"start":"1:07","end":"1:11","text":"that data points to the very first element"},{"start":"1:11","end":"1:14","text":"let's do something a little bit surprising here"},{"start":"1:14","end":"1:17","text":"let's add one to data and print that out"},{"start":"1:17","end":"1:20","text":"so, data plus one"},{"start":"1:20","end":"1:23","text":"and we'll do data plus two"},{"start":"1:23","end":"1:25","text":"and so on"},{"start":"1:25","end":"1:44","text":"so, if we look over here at our output, we'll see that each time I add one, our address in hexadecimal is going up by 4 each time"},{"start":"1:44","end":"1:48","text":"so we've got 9d40, 9d44, 9d48"},{"start":"1:48","end":"1:48","text":"here's why"},{"start":"1:48","end":"1:53","text":"when you add an integer to an address pointer,"},{"start":"1:53","end":"1:56","text":"C knows the type of that pointer"},{"start":"1:56","end":"1:58","text":"so in this case, we're pointing at integers"},{"start":"1:58","end":"2:04","text":"so each time we add one, we actually want to progress to the next integer stored in memory"},{"start":"2:04","end":"2:09","text":"and as each integer takes 4 bytes, that's why our address is going up by 4 each time"},{"start":"2:09","end":"2:12","text":"so how could I use this?"},{"start":"2:12","end":"2:26","text":"well, one way is to use asterisk which means use the address so, for example, I can say data (the parenthesis are not strictly necessary but we'll use them in a moment)"},{"start":"2:26","end":"2:30","text":"and let's say store the value a hundred in there"},{"start":"2:30","end":"2:36","text":"what about if I wanted to store some value at the next entry?"},{"start":"2:36","end":"2:39","text":"ok so, hundred, hundred one"},{"start":"2:39","end":"2:45","text":"so now I've stored the value a hundred that integer pattern into the first 4 bytes"},{"start":"2:45","end":"2:49","text":"and the integer pattern for a hundred and one in the next 4 bytes"},{"start":"2:49","end":"2:53","text":"and I guess you could figure out what this would do as well"},{"start":"2:53","end":"3:02","text":"the asterisks means use the pointer, follow the pointer, dereference the pointer"},{"start":"3:02","end":"3:07","text":"in other word, we've got an expression which is a memory address, now I want to use it"},{"start":"3:07","end":"3:14","text":"now I actually want to use that pattern (that bitwise pattern) to actually read or write some memory"},{"start":"3:14","end":"3:17","text":"so that's what the asterisk does: it's time to go and talk to memory"},{"start":"3:17","end":"3:22","text":"this is so useful with arrays"},{"start":"3:22","end":"3:24","text":"there is an alternative syntax which is to use the square brackets"},{"start":"3:24","end":"3:28","text":"so, I could have written the following"},{"start":"3:28","end":"3:36","text":"which means take my address pointer, add two to it, and use that address for the array"},{"start":"3:36","end":"3:38","text":"so these last two lines are the same"},{"start":"3:38","end":"3:44","text":"in fact, here's a little secret about C that I could actually swap these around"},{"start":"3:44","end":"3:50","text":"so we could also write this in this slightly crazy way"},{"start":"3:50","end":"3:56","text":"so this is crazy but actually two square bracket data would evaluate to the same thing"},{"start":"3:56","end":"4:01","text":"so that's something to confuse your non-C friends with"},{"start":"4:01","end":"4:06","text":"that's enough with me playing with integer pointers"},{"start":"4:06","end":"4:08","text":"now, it's your turn. Bye!"}]