[{"start":"0:00","end":"0:02","text":"let's talk about strings today"},{"start":"0:02","end":"0:07","text":"first of all, these two things are very different"},{"start":"0:07","end":"0:12","text":"I could have a pointer to \"hello world\""},{"start":"0:12","end":"0:17","text":"or I could have an array of characters to \"hello world\""},{"start":"0:17","end":"0:28","text":"though both point to an array that points to the first letters"},{"start":"0:28","end":"0:29","text":"there are noteworthy differences. first of all they have different sizes"},{"start":"0:29","end":"0:34","text":"let's look at the sizes of each of these, perhaps you can guess what the result is going to be"},{"start":"0:34","end":"0:43","text":"the size of the pointer is the number of bytes to actually hold the character pointer"},{"start":"0:43","end":"0:45","text":"because this is a 32-bit machine it is is four bytes"},{"start":"0:45","end":"0:50","text":"the size of array is the total size required to hold the whole array"},{"start":"0:50","end":"0:59","text":"whent his code runs it copies the contents of the string literal into the new array object"},{"start":"0:59","end":"1:11","text":"in this case we need twelve bytes for that, eleven for \"hello world\" and a twelth to hold the null character at the end of the string"},{"start":"1:11","end":"1:21","text":"the size is different, plus remember that because we've made additional memory on the stack for the array"},{"start":"1:21","end":"1:25","text":"we can change it to \"jello world\" for example"},{"start":"1:25","end":"1:28","text":"let's start manipulating our string"},{"start":"1:28","end":"1:32","text":"we'll do this on our array so we can actually make modifications to it"},{"start":"1:32","end":"1:34","text":"we will change all of the 'l's to a different letter"},{"start":"1:34","end":"1:40","text":"pass the beggining of the array"},{"start":"1:40","end":"1:48","text":"afterwards we'll print out what the array is"},{"start":"1:48","end":"2:02","text":"I have my function called change and it takes a pointer to that memory"},{"start":"2:02","end":"2:07","text":"we don't need to return anything because we are going to be using the paramter to point to some memory that we are going to change"},{"start":"2:07","end":"2:11","text":"what can we do with this?"},{"start":"2:11","end":"2:19","text":"have a little loop that says while(p) that says while p is not zero"},{"start":"2:19","end":"2:23","text":"what we actually cares about is if p is pointing to memory that holds zero"},{"start":"2:23","end":"2:26","text":"in other words, we've reached the end of the string"},{"start":"2:26","end":"2:31","text":"we want to dereference the pointer with the asterisk"},{"start":"2:31","end":"2:37","text":"we could change all of the letters"},{"start":"2:37","end":"2:38","text":"for example we could blank it out"},{"start":"2:38","end":"2:43","text":"we could say *p equals"},{"start":"2:43","end":"2:47","text":"and it might be tempting to write an * here"},{"start":"2:47","end":"2:55","text":"but that's not right because the * means I've given the address of the * "},{"start":"2:55","end":"3:01","text":"so I'd be writing an * into the address of the *"},{"start":"3:01","end":"3:04","text":"if I run this I get a few warnings"},{"start":"3:04","end":"3:07","text":"and it runs forever because my loops runs forever"},{"start":"3:07","end":"3:10","text":"let me ctrl-c that to break it"},{"start":"3:10","end":"3:18","text":"this time change the loop so you add one to p every time"},{"start":"3:18","end":"3:26","text":"now I've got a very strange character because it's taken the lowest eight bits and copied that into my character"},{"start":"3:26","end":"3:34","text":"instead let's change that to the actual bitwise patter of my character"},{"start":"3:34","end":"3:42","text":"now I've got something that can get rid of swear words by over writing them with asterisks"},{"start":"3:42","end":"3:45","text":"but we didn't want to do that for all the characters, we just wanted to do that for the l's"},{"start":"3:45","end":"3:58","text":"let's see if my p is, at that memory location, an 'l'"},{"start":"3:58","end":"4:03","text":"because we are working with characters it is ok to compare them with =="},{"start":"4:03","end":"4:06","text":"run that"},{"start":"4:06","end":"4:11","text":"we have a couple of errors here"},{"start":"4:11","end":"4:13","text":"for starters we're not using pointer"},{"start":"4:13","end":"4:15","text":"so I can comment out that line"},{"start":"4:15","end":"4:19","text":"I've got another problem here that change is implicitly declared"},{"start":"4:19","end":"4:28","text":"that's because we haven't declared what the function signature of change() looks like"},{"start":"4:28","end":"4:26","text":"let's do that now"},{"start":"4:26","end":"4:37","text":"I'm saying later on compiler, I expect to actually define a function and I'll give you the actual code to create this change function()"},{"start":"4:37","end":"4:42","text":"but for now here is what it's signature looks like"},{"start":"4:42","end":"4:46","text":"and it doesn't return anything"},{"start":"4:46","end":"4:49","text":"if I compile that my warnings should go away"},{"start":"4:49","end":"4:59","text":"I have a function that can walk through a char*"},{"start":"4:59","end":"5:00","text":"I could have another function that finds letters as well"},{"start":"5:00","end":"5:06","text":"suppose we wanted to find the first 'o' in this"},{"start":"5:06","end":"5:12","text":"I could change this so that rather than changing the letters"},{"start":"5:12","end":"5:21","text":"if the contents of p is an 'o', let's return p"},{"start":"5:21","end":"5:24","text":"now I'm going to change my method signature"},{"start":"5:24","end":"5:28","text":"and I'd better have a return value that returns something if I get to the very end"},{"start":"5:28","end":"5:31","text":"for example, it returns where p is"},{"start":"5:31","end":"5:47","text":"we can now update my original code so that it finds the first 'o' and gives you back a pointer ot that"},{"start":"5:47","end":"5:50","text":"if I print that out"},{"start":"5:50","end":"5:53","text":"hopefully you can guess what my program should do"},{"start":"5:53","end":"6:03","text":"it gave us back a string and it this time the pointer was half way through \"hello world\""},{"start":"6:03","end":"6:06","text":"that's OK, our pointers don't care what they point to"},{"start":"6:06","end":"6:16","text":"strings continue until the get to the null byte at the end"}]