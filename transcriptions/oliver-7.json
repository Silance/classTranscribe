[{"start":"0:00","end":"0:02","text":"so what about strings in c?"},{"start":"0:02","end":"0:04","text":"what if I said"},{"start":"0:04","end":"0:05","text":"\"hello\""},{"start":"0:05","end":"0:09","text":"how is this represented? well clearly it's made up of characters"},{"start":"0:09","end":"0:11","text":"and I've got five characters to display"},{"start":"0:11","end":"0:16","text":"h e l l o, but actually C strings contain an extra character at the end"},{"start":"0:16","end":"0:22","text":"a 0 value or null character to say \"hey this is the end of the string\""},{"start":"0:22","end":"0:25","text":"this is going to take six bytes of storage"},{"start":"0:25","end":"0:28","text":"let's see if we can prove that"},{"start":"0:28","end":"0:36","text":"we'll say printf() and \"Size of hello is %d\""},{"start":"0:36","end":"0:44","text":"and we'll have a little expression here to say what is the sizeof() \"hello\""},{"start":"0:44","end":"0:51","text":"and you see that size of hello is 6"},{"start":"0:51","end":"0:59","text":"h e l l o that's five, plus an extra byte for the 0 to say that's the end"},{"start":"0:59","end":"1:03","text":"so we can use sizeof() on constant strings"},{"start":"1:03","end":"1:11","text":"we could also run through the string to actually find the 0 byte ourselves"},{"start":"1:11","end":"1:11","text":"so let's do that"},{"start":"1:11","end":"1:13","text":"let's have a pointer to a character"},{"start":"1:13","end":"1:23","text":"I will initialize it to my string \"hello\""},{"start":"1:23","end":"1:28","text":"which means my pointer is initially pointing to h the first character"},{"start":"1:28","end":"1:32","text":"I'll have a count variable here"},{"start":"1:32","end":"1:42","text":"and while the pointer the value is not equal to 0 "},{"start":"1:42","end":"1:44","text":"I want to do something"},{"start":"1:44","end":"1:43","text":"lets increment the pointer"},{"start":"1:43","end":"1:45","text":"lets move it onto the next character"},{"start":"1:45","end":"1:49","text":"and let's increment our count as well"},{"start":"1:49","end":"1:52","text":"so we can find out how many characters we have"},{"start":"1:52","end":"2:01","text":"and then at the end we will say how many characters we found"},{"start":"2:01","end":"2:06","text":"not including the 0 byte"},{"start":"2:06","end":"2:09","text":"so if our program works this should find five characters"},{"start":"2:09","end":"2:24","text":"our little loop went around five times and all it did was increment count"},{"start":"2:24","end":"2:29","text":"we could have made it of course print out each one of those letters"},{"start":"2:29","end":"2:30","text":"we could also simplify our program a little bit"},{"start":"2:30","end":"2:37","text":"because as you know any non-zero value is treated as true"},{"start":"2:37","end":"2:40","text":"so remove that and say while(*ptr)"},{"start":"2:40","end":"2:43","text":"and when we get to the null byte we will finishi"},{"start":"2:43","end":"2:53","text":"lets change our program so before we increment the pointer to print out the next characters"},{"start":"2:53","end":"3:02","text":"my format string is just %c "},{"start":"3:02","end":"3:09","text":"each character is exactly one byte"},{"start":"3:09","end":"3:13","text":"so when we add one to our pointer, line ten here"},{"start":"3:13","end":"3:16","text":"we are just going to add one to it"},{"start":"3:16","end":"3:16","text":"because each character is exactly one byte"},{"start":"3:16","end":"3:23","text":"so there's our program and it managed to print out exactly \"hello\""},{"start":"3:23","end":"3:30","text":"do we need to write this every time that we want to find out the number of characters in a string?"},{"start":"3:30","end":"3:34","text":"no! there's a function called strlen()"},{"start":"3:34","end":"3:40","text":"instead of my loop if I #include <string.h>"},{"start":"3:40","end":"3:42","text":"I've now got strlen()"},{"start":"3:42","end":"3:45","text":"let me check the two results"},{"start":"3:45","end":"3:52","text":"instead I'll say len = strlen() and pass it a pointer to my character"},{"start":"3:52","end":"3:54","text":"I'm tempted to use pointer but that would be a bad idea"},{"start":"3:54","end":"3:57","text":"perhaps you can figure out why"},{"start":"3:57","end":"4:04","text":"so \"Strlen returned\" and we'll talk about how to fix my program in a moment"},{"start":"4:04","end":"4:09","text":"so we'll run this"},{"start":"4:09","end":"4:16","text":"strlen() returned 0"},{"start":"4:16","end":"4:23","text":"why? because by the time my loop finished I'd advanced that pointer to the null byte"},{"start":"4:23","end":"4:24","text":"so when we passed it to strlen() it immediateily found the null byte"},{"start":"4:24","end":"4:32","text":"what we should do is evaluate our strlen() before we change our pointer"},{"start":"4:32","end":"4:45","text":"the last thing we'll do today is make our program crash"},{"start":"4:45","end":"4:50","text":"try and change our first character to be someting else"},{"start":"4:50","end":"4:53","text":"like \"J"},{"start":"4:53","end":"5:01","text":"dereference that pointer and use it to push in a character"},{"start":"5:01","end":"5:05","text":"I don't want to have a string, i actually want to have a character"},{"start":"5:05","end":"5:09","text":"let's try that and see what happens"},{"start":"5:09","end":"5:15","text":"I get a seg fault when I try to run that line"},{"start":"5:15","end":"5:23","text":"different parts of proccesses memory are valid for reading or reading/writing"},{"start":"5:23","end":"5:29","text":"the program code, the actual assembly code, can only be read"},{"start":"5:29","end":"5:33","text":"and my constants, such as \"hello\" can only be read"},{"start":"5:33","end":"5:39","text":"and the hardware is sophisticated enough to know which parts of memory are read and which parts are read/write"},{"start":"5:39","end":"5:43","text":"and which parts of memory are invalid"},{"start":"5:43","end":"5:49","text":"I get a seg fault if I try to change the constant memory"},{"start":"5:49","end":"5:52","text":"time for you to play with character poitners, bye"}]