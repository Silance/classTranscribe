 [{"start":"0:00","end":"0:01","text":"hello welcome"},{"start":"0:01","end":"0:06","text":"let's talk about how we can get single characters and print them out in c"},{"start":"0:06","end":"0:09","text":"so here's some functions defined in std.io"},{"start":"0:09","end":"0:15","text":"i can say give me a single character for example and why don't I just keep calling this"},{"start":"0:15","end":"0:22","text":"so i could just say while getchar is not equal to a special constant called EOF keep going around in a loop"},{"start":"0:22","end":"0:28","text":"but if I actually want to print them out I better actually store the value of getchar"},{"start":"0:28","end":"0:36","text":"so let's have an integer value called c and inside my while condition I'm actually going to assign the result into c"},{"start":"0:36","end":"0:47","text":"so you'll often see this pattern inside systems programming where we take a systems call or a library call and we store the results inside a variable"},{"start":"0:47","end":"0:57","text":"but because that may also signify an error condition or a termination condition we use it immediately to check inside part of a while loop or an if statement"},{"start":"0:57","end":"1:00","text":"so we've got a little character loop here that is going to keep going until it gets to the end of the file"},{"start":"1:00","end":"1:03","text":"so now I want to print it out"},{"start":"1:03","end":"1:06","text":"guess what i can call putchat and we'll see that running "},{"start":"1:06","end":"1:09","text":"let's run this little program"},{"start":"1:09","end":"1:12","text":"ABCD"},{"start":"1:12","end":"1:13","text":"it prints back ABCD"},{"start":"1:13","end":"1:18","text":"okay so we don't have to display the character just as a character"},{"start":"1:18","end":"1:23","text":"we can display it as a character an integer and hexdecimal values"},{"start":"1:23","end":"1:25","text":"so let's use printf for that"},{"start":"1:25","end":"1:31","text":"i've got %c %d and %c for character integer and hexadecimal value"},{"start":"1:31","end":"1:33","text":"alright so let's run this"},{"start":"1:33","end":"1:42","text":"and you can see that the letter A corresponds to sixty five which is in hexadecimal forty one"},{"start":"1:42","end":"1:48","text":"right so why don't we use our little program to print out the contents of another file"},{"start":"1:48","end":"1:52","text":"so if I cat my source code I can see the contents of that"},{"start":"1:52","end":"1:55","text":"great so I'm going to pipe it into my program"},{"start":"1:55","end":"2:05","text":"so i'll do ./program and it reads every byte and prints it out as a character"},{"start":"2:05","end":"2:13","text":"great so let's encrypt our file now so I'm going to modify our value of c if it's not a newline character"},{"start":"2:13","end":"2:19","text":"so what we'll do is say if c is at least thirty two in other words at least a space an ascii space"},{"start":"2:19","end":"2:26","text":"and if it is we will change the lowest bit"},{"start":"2:26","end":"2:27","text":"we'll flip the lowest bit"},{"start":"2:27","end":"2:28","text":"how can we do that"},{"start":"2:28","end":"2:31","text":"let's xor it with one"},{"start":"2:31","end":"2:34","text":"right and then we'll print it out"},{"start":"2:34","end":"2:36","text":"okay so we'll run this"},{"start":"2:36","end":"2:41","text":"CDE for example and it changed the C to a B"},{"start":"2:41","end":"2:44","text":"and if I do 135 I get 024"},{"start":"2:44","end":"2:50","text":"so to say that I've got to the end of the file when I'm just typing you by the way you can do control d"},{"start":"2:50","end":"2:55","text":"now see this working on some actual source code"},{"start":"2:55","end":"3:01","text":"so let's here some text my program.c and i'm going to pipe that into my program to use as its input"},{"start":"3:01","end":"3:06","text":"and you can see great we've garbled the program"},{"start":"3:06","end":"3:13","text":"so if I want to I can then take that output and pipe it into my program again"},{"start":"3:13","end":"3:19","text":"so now i'm going to unencrypt it because i flipped the lowest bit back  "},{"start":"3:19","end":"3:19","text":"so we get back our source code"},{"start":"3:19","end":"3:25","text":"so that's getchar and putchar i can also work with whole lines"},{"start":"3:25","end":"3:41","text":"i can let's get rid of the loop here i can say puts hello or any pointer to a character array provided its terminated by a zero byte at the end"},{"start":"3:41","end":"3:50","text":"and that is equivalent to printf by saying %s and \\n at the end"},{"start":"3:50","end":"3:55","text":"so i've got some character pointer here"},{"start":"3:55","end":"4:00","text":"right so it's a little bit shorter to type than writing printf"},{"start":"4:00","end":"4:05","text":"there is the opposite which is to get some input"},{"start":"4:05","end":"4:12","text":"but this has a problem and we'll see why in a moment why this function call is actually being removed from the c standard"},{"start":"4:12","end":"4:22","text":"i'm talking about gets so let's call gets and we will have a little buffer here"},{"start":"4:22","end":"4:24","text":"so let's put a little buffer on the stack here"},{"start":"4:24","end":"4:27","text":"i'll make it twelve bytes today "},{"start":"4:27","end":"4:32","text":"and remember when we call gets with buffer if you use the array name you are talking about the very first byte of the array"},{"start":"4:32","end":"4:35","text":"and rather than printing out hello"},{"start":"4:35","end":"4:38","text":"we will print out our buffer value"},{"start":"4:38","end":"4:46","text":"so let's run this and we can type something in and it echos it back to us"},{"start":"4:46","end":"4:50","text":"fantastic but what happens if we enter more than twelve bytes"},{"start":"4:50","end":"4:54","text":"so in other words could something bad happen to our other variables"},{"start":"4:54","end":"5:00","text":"well yes it could because if we go past twelve bytes we start writing into memory which is used for other purposes"},{"start":"5:00","end":"5:05","text":"for example in my little program the integer is immediately after the buffer"},{"start":"5:05","end":"5:13","text":"let's prove this let's set our hex value of c to be ten twenty thirty fourty"},{"start":"5:13","end":"5:19","text":"let me print that out after we've called gets i'm going to print it again"},{"start":"5:19","end":"5:29","text":"so we've got to remember that what we store is going to be our letters plus a null byte"},{"start":"5:29","end":"5:42","text":"so in this case if I do ABCDABCDABCD I've already overflowed because the thirteenth byte is now going to be written into my integer"},{"start":"5:42","end":"5:46","text":"but i am going to do just a few more I'll do ABCD there we go"},{"start":"5:46","end":"5:51","text":"and we'll see that I've managed to change my integer value to 41424344"},{"start":"5:51","end":"5:56","text":"so the last ABC that I wrote in there actually overran my buffer"},{"start":"5:56","end":"6:01","text":"i've got a buffer overflow and I've corrupted the contents of another variable"},{"start":"6:01","end":"6:03","text":"so that's why gets is dangerous"},{"start":"6:03","end":"6:10","text":"there's no way to tell gets that we shouldn't accept input that is too long for it"},{"start":"6:10","end":"6:18","text":"so in a future video i'll tell you about getline and also fgets which don't suffer from these problems"},{"start":"6:18","end":"6:22","text":"okay that's it for me thanks for watching and i'll see you in another vide"},{"start":"6:22","end":"6:22","text":"bye"}]